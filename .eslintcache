[{"/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/index.js":"1","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/App.js":"2","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/reportWebVitals.js":"3","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/history.js":"4","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/HomePage.js":"5","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/LoginPage.js":"6","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/ListOfEmployee.js":"7","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/CreateEmployee.js":"8","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/EditEmployee.js":"9","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/EmployeeDetails.js":"10","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/SearchEmpDetails.js":"11","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/HR_Page.js":"12","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/CreatePersonalDetails.js":"13","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/ListofPersonalDetails.js":"14","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/PersonalDetails.js":"15"},{"size":712,"mtime":1609733795367,"results":"16","hashOfConfig":"17"},{"size":8999,"mtime":1612173257974,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1607967946513,"results":"19","hashOfConfig":"17"},{"size":84,"mtime":1607967946513,"results":"20","hashOfConfig":"17"},{"size":2749,"mtime":1611990494898,"results":"21","hashOfConfig":"17"},{"size":1912,"mtime":1611404068305,"results":"22","hashOfConfig":"17"},{"size":5991,"mtime":1612180821607,"results":"23","hashOfConfig":"17"},{"size":7085,"mtime":1612181987119,"results":"24","hashOfConfig":"17"},{"size":7208,"mtime":1612163102055,"results":"25","hashOfConfig":"17"},{"size":4195,"mtime":1612175518522,"results":"26","hashOfConfig":"17"},{"size":4274,"mtime":1611484749851,"results":"27","hashOfConfig":"17"},{"size":2377,"mtime":1611560744864,"results":"28","hashOfConfig":"17"},{"size":5882,"mtime":1612191231869,"results":"29","hashOfConfig":"17"},{"size":4055,"mtime":1612174697965,"results":"30","hashOfConfig":"17"},{"size":4654,"mtime":1612182179089,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"xj1n5e",{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"34"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"34"},"/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/index.js",[],["75","76"],"/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/App.js",["77"],"import React from 'react';\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport history from './history';\nimport { LoginPage } from \"./component/LoginPage\";\nimport { HomePage } from \"./component/HomePage\";\nimport { ListOfEmployee } from \"./component/ListOfEmployee\";\nimport { CreateEmployee } from \"./component/CreateEmployee\";\nimport { EditEmployee } from \"./component/EditEmployee\";\nimport {EmployeeDetails} from \"./component/EmployeeDetails\";\nimport {EmpDetails} from \"./component/SearchEmpDetails\";\nimport {HR} from \"./component/HR_Page\";\nimport {PersonalDetails} from './component/ListofPersonalDetails';\nimport {Create_PersonalDetails} from \"./component/CreatePersonalDetails\";\nimport {Personal_Details} from \"./component/PersonalDetails\"\nimport './App.css';\nimport { from } from 'apollo-boost';\nfunction App() {\n  return (\n\n    <Router history={history}>\n      <Switch>\n        <Route exact path=\"/\" component={LoginPage} />\n        <Route exact path=\"/home\" component={HomePage} />\n        <Route exact path=\"/list\" component={ListOfEmployee} />\n        <Route exact path=\"/adding\" component={CreateEmployee} />\n        <Route exact path=\"/edit/:id/\" component={EditEmployee} />\n        <Route exact path=\"/display/:id/\" component={EmployeeDetails}/>\n        <Route exact path=\"/search/:code/\" component={EmpDetails}/>\n        <Route exact path=\"/hr\" component={HR}/>\n        <Route exact path=\"/personal\" component={PersonalDetails}/>\n        <Route exact path=\"/createpresonal\" component={Create_PersonalDetails}/>\n        <Route exact path=\"/pd/:id/\" component={Personal_Details}/>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React,{  Fragment, useState } from 'react'\n// import Styled from '@emotion/styled';\n// import { Link } from 'react-router-dom';\n// import { useMutation,gql } from '@apollo/client';\n// const Navbar = Styled.nav`\n// background-color: ${(props) => props.bgColor};\n// position: sticky;\n// top:0px;\n// padding:8px;\n// color:${(props) => props.color};\n// font-size:25px;\n// `;\n// const Logo = Styled.img`\n// height:20px;\n// width:20px\n// `;\n// const Lable = Styled.label`\n// font-size:20px;\n// `;\n// const Input = Styled.input`\n// border-radius:5px;\n// width:230px;\n// margin-left:5px;\n// height:25px;\n// `;\n// const Break = Styled.br`\n// `;\n// const SelectBox = Styled.select`\n// &.Selectbox1{\n// width: 230px;\n// margin-left:5px;\n// border-radius:5px;\n// height:25px;\n// }\n// `;\n// const Option = Styled.option`\n// `;\n// const Button = Styled.button`\n// color:black;\n// background-color: ${props =>\n//  props.save ? 'powderblue' : 'white'};\n// height:30px;\n// font-size:20px;\n// width:80px;\n// border-radius:5px;\n// &:hover {\n// opacity:0.5;\n// `;\n// const Container = Styled.form`\n// display: flex;\n// justify-content: center;\n// align-items: center;\n// padding:20px;\n// `;\n// const Table = Styled.table`\n// `;\n// const TableRow = Styled.tr`\n// `;\n// const TableColumn = Styled.td`\n// `;\n// const LinkTag = Styled(Link)` \n// color:black; \n// text-decoration:none;\n// `;\n// const EmployeeList = gql`\n//      mutation {\n//          createEmployee(data: {\n//               name:$name,\n//               code:$code,\n//               email:$email,\n//               mobileNo:$mobileno,\n//               department:$department,\n//               role:$role,\n//              joinedDate:$Joindate   \n//            })\n//                   {\n//                       respCode, respMessage\n//                   }\n//               }\n//           `;\n// export  const CreateEmployee =()=> {\n\n\n//     const [empState, setEmpState] = useState({\n\n//         name: '',\n//         email: '',\n//         mobileno:'',\n//         role:'',\n//         department:'',\n//         Joindate:'',\n//         code: ''\n//       });\n\n\n\n\n//       const printEmployee = ()=>{\n//         console.log(empState.name,empState.code,empState.Joindate,empState.department,empState.email,empState.role,empState.mobileno);\n//     }\n\n//     // const [{loading, error, data }] = useMutation(EmployeeList);\n\n\n//     // if (loading) return \"Loading...\";\n//     // if (error) return \"Error\";\n//     // if (data) return console.log(\"Data from mutation\", data);\n//         return (\n//             <Fragment>\n//                 {/* <Navbar bgColor=\"powderblue\" color=\"black\">\n//                 <Logo src={require(\"../images/Logo.png\")}></Logo> Beeja\n//                 </Navbar> */}\n//                 <Navbar bgColor=\"grey\" color=\"white\">\n//                     Create an Employee\n//                 </Navbar>\n//                 <Break />\n//                 <Container >\n\n//                 <Table >\n\n//                         <TableRow>\n//                             <TableColumn ><Lable htmlFor=\"Name\"> Name: </Lable></TableColumn>\n//                             <TableColumn ><Input type=\"text\" value={empState.name} onChange={(e)=>setEmpState({setEmpState,name:e.target.value})}  /></TableColumn>\n//                         </TableRow>\n//                         <Break />\n//                         <TableRow>\n//                             <TableColumn ><Lable htmlFor=\"Empl-Id\"> Employee Id: </Lable></TableColumn>\n//                             <TableColumn><Input type=\"text\" value={empState.code} onChange={(e)=>setEmpState({setEmpState,code:e.target.value})} required /></TableColumn>\n//                         </TableRow>\n//                         <Break />\n//                         <TableRow>\n//                             <TableColumn ><Lable htmlFor=\"Email\"> Email: </Lable></TableColumn>\n//                             <TableColumn><Input type=\"text\" value={empState.email} onChange={(e)=>setEmpState({setEmpState,email:e.target.value})}required /></TableColumn>\n//                         </TableRow>\n//                         <Break />\n//                         <TableRow>\n//                             <TableColumn > <Lable htmlFor=\"Mobile Number\"> Mobile Number: </Lable></TableColumn>\n//                             <TableColumn><Input placeholder=\" +91 \" type=\"number\"  value={empState.mobileno} onChange={(e)=>setEmpState({setEmpState,mobileno:e.target.value})}  required /></TableColumn>\n//                         </TableRow>\n//                         <Break />\n//                         <TableRow>\n//                             <TableColumn > <Lable htmlFor=\"Department\"> Department: </Lable></TableColumn>\n//                             <TableColumn><SelectBox className=\"Selectbox1\"  value={empState.department} onChange={(e)=>setEmpState({setEmpState,department:e.target.value})} requried>\n//                                 <Option disabled value> Select an Option</Option>\n//                                 <Option value=\"HR\"> HR </Option>\n//                                 <Option value=\"ADMIN\"> ADMIN </Option>\n//                                 <Option value=\"ACCOUNTING\"> ACCOUNTING </Option>\n//                                 <Option value=\"IT\"> IT </Option>\n//                             </SelectBox></TableColumn>\n//                         </TableRow>\n//                         <Break />\n//                         <TableRow>\n//                             <TableColumn ><Lable htmlFor=\"Role\"> Role: </Lable></TableColumn>\n//                             <TableColumn><SelectBox className=\"Selectbox1\" value={empState.role}onChange={(e)=>setEmpState({setEmpState,role:e.target.value})} requried>\n//                                 <Option disabled value> Select an Option</Option>\n//                                 <Option value=\"ADMIN\"> ADMIN </Option>\n//                                 <Option value=\"SUPER ADMIN\"> SUPER ADMIN </Option>\n//                                 <Option value=\"ACCOUNTANT\"> ACCOUNTANT </Option>\n//                                 <Option value=\"SOFTWARE ENGINEER\"> SOFTWARE ENGINEER </Option>\n//                                 <Option value=\"SENIOR-SOFTWARE ENGINEER\"> SENIOR-SOFTWARE ENGINEER </Option>\n//                             </SelectBox></TableColumn>\n//                         </TableRow>\n//                         <Break />\n//                         <TableRow>\n//                             <TableColumn > <Lable htmlFor=\"Date-Containerat\" className=\"Selectbox1\"> Join Date: </Lable></TableColumn>\n//                             <TableColumn> <Input type=\"date\"  placeholder=\"dd-mm-yyyy\"value={empState.Joindate}onChange={(e)=>setEmpState({setEmpState,Joindate:e.target.value})} requried/></TableColumn>\n//                         </TableRow>\n//                         <Break />\n//                         <TableRow>\n//                             <TableColumn ><Button type=\"Cancel\" > Cancel </Button></TableColumn>\n//                             <TableColumn> <Button  type=\"save\" onClick={printEmployee}  >Submit</Button></TableColumn>     </TableRow>                           \n//                     </Table>                 \n//                 </Container>\n//                 </Fragment>\n//         );  \n// }","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/reportWebVitals.js",[],["78","79"],"/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/history.js",[],"/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/HomePage.js",["80","81","82","83","84","85","86","87"],"import React, { Component, Fragment } from 'react'\nimport Styled from '@emotion/styled';\n// import ListsofEmployees from \"./ListOfEmployee\";\nimport { Link } from 'react-router-dom';\nimport { useQuery, gql, useMutation } from '@apollo/client';\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n// import { faEdit, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport './images/mobile_black.png';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\ncolor: ${(props) => props.color};\nposition: sticky;\ntop: 0px;\nfont-size: 20px;\npadding: 8px;\ntext-align:${(props) => props.text};\n`;\nconst LinkTag = Styled(Link)`\ncolor:black;\ntext-decoration:none;\n`;\nconst Logo = Styled.img`\nheight: 30px;\nwidth: 30px;\nmargin-bottom:-5px;\n`;\nconst Table = Styled.table`\nborder-collapse: collapse;\nborder: 3px solid #ddd;\n`;\nconst TableData = Styled.td`\nborder: 3px solid #ddd;\nheight:30px;\nfont-size:20px;\nfont-weight:bold;\npadding:40px;\nvertical-align:bottom;\ntext-align:left;\n&:hover {background-color: grey;}\n`;\nconst TableRow = Styled.tr`\nborder: 3px solid #ddd;\n &:nth-child(even){background-color: #F2F2F2;}\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: ${props =>\n        props.save ? 'powderblue' : 'white'};\nheight:30px;\nfont-size:20px;\nwidth:80px;\nborder-radius:5px;\n&:hover {\nopacity:0.5;\n`;\n\n\n \n    // window.onpopstate= function()\n    // {\n    //     alert(\"Are you sure want to leave this page\");\n    // }\n    \nexport const HomePage = () => {\n\n    return (\n        \n        <Fragment>\n            {/* <Navbar bgColor=\"powderblue\" color=\"black\">\n                    <Logo src={require(\"./images/mobile_black.png\") } /> Beeja\n                </Navbar> */}\n            <Navbar bgColor=\"grey\" color=\"white\" text=\"center\">\n                Home page\n                    </Navbar>\n            <Table>\n                <TableRow>\n                    <TableRow><TableData>\n                    <LinkTag to={\"/hr\"} >HR </LinkTag></TableData></TableRow>\n                    <TableRow><TableData> ACCOUNTING</TableData></TableRow>\n                    <TableRow><TableData>\n                        <LinkTag to={\"/list\"} >\n                            EMOPLOYEE DIRECTORY\n                             </LinkTag>\n                    </TableData></TableRow>\n                    <TableRow><TableData> CLIENT</TableData></TableRow>\n                    \n                    <TableRow ><TableData>\n                \n                        DOCUMENTATION\n                        </TableData></TableRow>\n                             \n                </TableRow>\n            </Table>\n        </Fragment>\n    )\n}","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/LoginPage.js",[],"/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/ListOfEmployee.js",["88","89","90","91","92","93"],"import React, { Component, Fragment, useState, } from 'react';\nimport Styled from '@emotion/styled';\nimport { Link ,useParams} from 'react-router-dom';\n//  import history from './../History';\nimport { useQuery, gql, useMutation } from '@apollo/client';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEdit, faTrash } from '@fortawesome/free-solid-svg-icons'\n// import { from } from 'apollo-boost';\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\nposition: sticky;\ntop: 0px;\npadding: 8px;\ncolor: ${(props) => props.color};\nfont-size: 20px;\n`;\nconst Logo = Styled.img`\nheight: 30px;\nwidth: 30px;\nmargin-bottom: -5px;\n`;\nconst Break = Styled.br`\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: powderblue;\nheight:27px;\nmargin-top: -3px;\nfont-size: 13px;\noutline: none;\nborder: none;\nwidth: 100px;\nfloat: right;\nborder-radius: 5px;\n&:hover {\nopacity: 0.5;\n`;\nconst Container = Styled.form`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\npadding: 8px;\n`;\nconst Table = Styled.table`\nborder-collapse: collapse;\nborder: 1px solid #ddd;\nwidth: 100%;\npadding: 20px;\n`;\nconst TableRow = Styled.tr`\nborder: 1px solid #ddd;\n&:nth-child(even){background-color: #F2F2F2;}\n&:hover {background-color: #ddd;}\n`;\nconst TableData = Styled.td`\nborder: 1px solid #ddd;\nheight: 30px;\nvertical-align: bottom;\ntext-align:left;\n`;\nconst TableHeading = Styled.th`\nborder: 1px solid #ddd;\nheight: 10px;\npadding:8px;\ntext-align:left;\n`;\nconst Actionbutton = Styled.button`\nheight:15px;\nwidth:15px;\ndisplay:inline-block;\nbackground-color:rgba(255,255,255,0.7);\nborder:1px solid gray;\n`;\nconst IdButton = Styled.button`\nborder:none;\noutline:none;\n    `;\n\n\n// const TriangleButton = Styled(Actionbutton)`\n// border-left: 7px solid transparent;\n// border-right:7px solid transparent;\n// border-top: 6px dashed;\n// `;\nconst LinkTag = Styled(Link)`\ncolor:black;\ntext-decoration:none;\n`;\nconst Hover =Styled.a`\n&:hover {\n    color:blue;\n`;\nconst Input = Styled.input`\nborder-radius:5px;\nwidth:230px;\nmargin-left:57%;\nheight:25px;\nfont-size:15px;\n`;\n\n\nexport const ListOfEmployee = () => {\n\n    const { id } = useParams();\n\n    const Show = gql`\n{\n    employeeList{\n    id\n    name\n    code\n    email\n    role\n    department\n    joinedDate\n    mobileNo\n    }\n  }`;\n\n    const [empId, setEmpId] = useState({ 'idToDelete': \"\" });\n    \n    const DELETE_Employee = gql`\n    mutation DeleteEmployee($id: String!){\n    deleteEmployee(id: $id){\n    respCode,\n    respMessage \n  }\n}\n`;\n\nconst {loading, error, data} = useQuery(Show);\nconst [deleteMutation] = useMutation(DELETE_Employee);\n\n    const handleDelete = (deleteId) => {\n        if (window.confirm(\"Do you really want to leave?\")) {\n            setEmpId({ 'idToDelete': deleteId });\n            console.log(\"handleDelte\", deleteId, empId);\n            deleteMutation({ variables: { id: deleteId } });\n\n        }\n        else {\n\n        }\n    };\n  \n    \n    if (loading) return <p>Loading ...</p>;\n    if (error) return <p>Error</p>;\n  \n    return (\n\n        <Fragment>\n            {/* <Navbar bgColor=\"powderblue\" color=\"black\">\n                    <Logo src={require(\"../images/Logo.png\")} /> \n                    Beeja\n                </Navbar>  */}\n                \n            <Navbar bgColor=\"grey\" color=\"white\">\n                List of Employee\n               \n                <Input type=\"text\" placeholder=\"Search\"  ></Input>\n              \n                    <Button >\n                    <LinkTag to={\"/adding\"}>Add Employee</LinkTag>\n                </Button>\n               \n            </Navbar>\n            <Break />\n            <Container>\n                <Table>\n                    <TableRow>\n                        <TableHeading>ID</TableHeading>\n                        <TableHeading>Name</TableHeading>\n                        <TableHeading>Email</TableHeading>\n                        <TableHeading>Role</TableHeading>\n                        <TableHeading>Department</TableHeading>\n                        <TableHeading>JoiningDate</TableHeading>\n                        <TableHeading>MobileNumber</TableHeading>\n                        <TableHeading>Edit</TableHeading>\n                        <TableHeading>Delete</TableHeading>\n                    </TableRow>\n\n                    {data.employeeList.map((employee, id) => (\n                        <TableRow>\n                            <a href=\"\">\n                        <LinkTag to={`/display/${employee.id}`}>\n                               <Hover> \n                                   <TableData key={id}>{employee.code}</TableData>\n                               </Hover>\n                                </LinkTag>\n                                </a>\n                            \n                            <TableData>{employee.name}</TableData>\n                            <TableData>{employee.email}</TableData>\n                            <TableData>{employee.role}</TableData>\n                            <TableData>{employee.department}</TableData>\n                            <TableData>{employee.joinedDate}</TableData>\n                            <TableData>{employee.mobileNo}</TableData>\n\n                            <TableData style={{ \"text-align\": \"center\" }} >\n                                <LinkTag to={`/edit/${employee.id}`}>\n                                    <FontAwesomeIcon icon={faEdit} ></FontAwesomeIcon>\n                                </LinkTag>\n                            </TableData>\n                            <TableData style={{ \"text-align\": \"center\" }} >\n                                <Button onClick={() => handleDelete(employee.id)} >\n                                    <FontAwesomeIcon icon={faTrash}></FontAwesomeIcon>\n                                </Button>\n                            </TableData>\n                        </TableRow>\n                    )\n                    )}\n                </Table>\n            </Container>\n        </Fragment>\n    )\n}\n","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/CreateEmployee.js",["94","95","96","97"],"import React, { Fragment, useState } from 'react'\nimport Styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nimport { useMutation, gql } from '@apollo/client';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n// import {gql} from 'graphql-tag'\n\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\nposition: sticky;\ntop:0px;\npadding:8px;\ncolor:${(props) => props.color};\nfont-size:25px;\n`;\nconst Logo = Styled.img`\nheight:20px;\nwidth:20px\n`;\nconst Lable = Styled.label`\nfont-size:20px;\n`;\nconst Input = Styled.input`\nborder-radius:5px;\nwidth:230px;\nmargin-left:5px;\nheight:25px;\n`;\nconst Break = Styled.br`\n`;\nconst SelectBox = Styled.select`\n&.Selectbox1{\nwidth: 230px;\nmargin-left:5px;\nborder-radius:5px;\nheight:25px;\n}\n`;\nconst Option = Styled.option`\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: ${props =>\n       props.save ? 'powderblue' : 'white'};\nheight:30px;\nfont-size:20px;\nwidth:80px;\nborder-radius:5px;\n&:hover {\nopacity:0.5;\n`;\nconst Container = Styled.form`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\npadding:20px;\n`;\nconst Table = Styled.table`\n`;\nconst TableData = Styled.td`\n`;\nconst TableRow = Styled.tr`\n`;\nconst TableColumn = Styled.td`\n`;\nconst LinkTag = Styled(Link)` \ncolor:black; \ntext-decoration:none;\n`;\n\nexport const CreateEmployee = () => {\n\n    const [formData, createFormData] = useState({\n        username:\"\",\n        code: \"\",\n        email: \" \",\n        mobileNO: \"\",\n        department: \"\",\n        role: \"\",\n        joinDate: \"\"\n    });\n\n    const EmployeeList = gql`\n     mutation {\n         createEmployee(data: {\n              name:\"${formData.username}\",\n              code:\"${formData.code}\",\n              email:\"${formData.email}\",\n              mobileNo:\"${formData.mobileNO}\",\n              department:\"${formData.department}\",\n              role:\"${formData.role}\",\n             joinedDate:\"${formData.joinDate}\"   \n           })\n                  {\n                      respCode, respMessage\n                  }\n              }\n          `;\n    const [EmployeeCreate, { loading, error, data }] = useMutation(EmployeeList);\n    if (loading) return <p>Loading ...</p>;\n    if (error) return <p>Error</p>;\n\n    // toast.configure() \n    // const remind = (message)=>{  \n    //     toast.success(message,\n    //     {position: toast.POSITION.BOTTOM_RIGHT})  \n    //   };\n\n    const handleChange = (e) => {\n        createFormData({\n            ...formData,\n            [e.target.name]: e.target.value.trim()\n        });\n    };\n    const handleSubmit = (e) => {\n        e.preventDefault()\n         EmployeeCreate();\n        showToast();\n    };\n\n    toast.configure()\n    const showToast = () => {\n    if (error)  { \n        toast.info('successful');\n    }\n};\n\n    return (\n\n        <Fragment>\n            {/* <Navbar bgColor=\"powderblue\" color=\"black\">\n                        <Logo src={require(\"../images/Logo.png\")}></Logo> Beeja\n                        </Navbar> */}\n            <Navbar bgColor=\"grey\" color=\"white\">\n                Create an Employee\n                        </Navbar>\n            <Break />\n            <Container >\n                <Table >\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Name\"> Name: </Lable></TableColumn>\n                        <TableColumn ><Input type=\"text\" name=\"username\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Empl-Id\"> Employee Id: </Lable></TableColumn>\n                        <TableColumn><Input type=\"text\" name=\"code\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Email\"> Email: </Lable></TableColumn>\n                        <TableColumn><Input type=\"email\" name=\"email\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Mobile Number\"> Mobile Number: </Lable></TableColumn>\n                        <TableColumn><Input placeholder=\" +91 \" name=\"mobileNO\" onChange={handleChange} type=\"number\" required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Department\"> Department: </Lable></TableColumn>\n                        <TableColumn><SelectBox className=\"Selectbox1\" name=\"department\" onChange={handleChange} required>\n                            <Option disabled selected value> Select an Option</Option>\n                            <Option value=\"HR\"> HR </Option>\n                            <Option value=\"ADMIN\"> ADMIN </Option>\n                            <Option value=\"ACCOUNTING\"> ACCOUNTING </Option>\n                            <Option value=\"IT\"> IT </Option>\n                        </SelectBox></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Role\"> Role: </Lable></TableColumn>\n                        <TableColumn><SelectBox className=\"Selectbox1\" name=\"role\" onChange={handleChange} required>\n                            <Option disabled selected value> Select an Option</Option>\n                            <Option value=\"ADMIN\"> ADMIN </Option>\n                            <Option value=\"SUPER ADMIN\"> SUPER ADMIN </Option>\n                            <Option value=\"ACCOUNTANT\"> ACCOUNTANT </Option>\n                            <Option value=\"SOFTWARE ENGINEER\"> SOFTWARE ENGINEER </Option>\n                            <Option value=\"SENIOR-SOFTWARE ENGINEER\"> SENIOR-SOFTWARE ENGINEER </Option>\n                        </SelectBox></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Date-Containerat\" className=\"Selectbox1\"> Join Date: </Lable></TableColumn>\n                        <TableColumn><Input type=\"date\" placeholder=\"dd-mm-yyyy\" name=\"joinDate\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn >\n                            <Button type=\"Cancel\">\n                                <LinkTag to={\"/list\"}>Cancel</LinkTag>\n                            </Button>\n                        </TableColumn>\n\n                        <TableColumn>\n                            <Button onClick={handleSubmit}>\n                                <LinkTag to={\"/list\"}>Submit</LinkTag>\n                            </Button>\n                        </TableColumn>\n                    </TableRow>\n                </Table>\n\n            </Container>\n\n        </Fragment>\n    );\n}\n","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/EditEmployee.js",["98","99","100","101","102"],"import React, { Component, Fragment, useState } from 'react'\n\nimport Styled from '@emotion/styled';\nimport { Link, useParams } from 'react-router-dom';\nimport { useMutation, gql, useQuery } from '@apollo/client';\nimport { ListOfEmployee } from './ListOfEmployee';\nimport { graphql } from 'graphql';\n\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\nposition: sticky;\ntop:0px;\npadding:8px;\ncolor:${(props) => props.color};\nfont-size:25px;\n`;\nconst Logo = Styled.img`\nheight:20px;\nwidth:20px\n`;\nconst Lable = Styled.label`\nfont-size:20px;\n`;\nconst Input = Styled.input`\nborder-radius:5px;\nwidth:230px;\nmargin-left:5px;\nheight:25px;\n`;\nconst Break = Styled.br`\n`;\nconst SelectBox = Styled.select`\n&.Selectbox1{\nwidth: 230px;\nmargin-left:5px;\nborder-radius:5px;\nheight:25px;\n}\n`;\nconst Option = Styled.option`\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: ${props =>\n        props.save ? 'powderblue' : 'white'};\nheight:30px;\nfont-size:20px;\nwidth:80px;\nborder-radius:5px;\n&:hover {\nopacity:0.5;\n`;\nconst Container = Styled.form`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\npadding:20px;\n`;\nconst Table = Styled.table`\n`;\nconst TableData = Styled.td`\n`;\nconst TableRow = Styled.tr`\n`;\nconst TableColumn = Styled.td`\n`;\nconst LinkTag = Styled(Link)` \ncolor:black; \ntext-decoration:none;\n`;\n\n\nexport const EditEmployee = () => {\n\n    const { id } = useParams();\n\n\n    const [empState, setState] = useState({\n        username: \"\",\n        code: \"\",\n        email: \" \",\n        mobileNo: \"\",\n        department: \"\",\n        role: \"\",\n        joinedDate: \"\"\n    })\n\n    const GetEmployeeById = gql`\n    query EmpDetails($id:String!){\n        employee(id:$id){\n            name\n            code\n            email\n            mobileNo\n            department\n            role\n            joinedDate\n        }\n    }\n    `;\n\n    const EmployeeEdit = gql`\n     mutation UpdateEmployee($id: String!){\n         updateEmployee(id: $id,data: {\n              name:\"${empState.username}\",\n              code:\"${empState.code}\",\n              email:\"${empState.email}\",\n              mobileNo:\"${empState.mobileNo}\",\n              department:\"${empState.department}\",\n              role:\"${empState.role}\",\n             joinedDate:\"${empState.joinedDate}\"   \n           })\n           {\n              respCode, respMessage\n                  }\n              }\n          `;\n    const { loading, error, data } = useQuery(GetEmployeeById, { variables: { id: id } });\n\n    const [EditMutation,] = useMutation(EmployeeEdit);\n    if (loading) return <p>Loading....</p>\n    if (error) return <p>ERROR....</p>\n\n    const handleChange = (e) => {\n        setState({\n            ...empState,\n            [e.target.name]: e.target.value.trim(),\n        });\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(empState);\n        EditMutation({ variables: { id: id } });\n\n    };\n\n    return (\n        <Fragment>\n\n            <Navbar bgColor=\"grey\" color=\"white\">\n                Edit an Employee\n                        </Navbar>\n            <Break />\n            <Container >\n\n                <Table >\n\n                    <TableRow>\n\n                        <TableColumn ><Lable htmlFor=\"Name\"> Name:</Lable></TableColumn>\n                        <TableColumn ><Input type=\"text\" name=\"username\" defaultValue={data.employee.name} onChange={handleChange} required /></TableColumn>\n\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Empl-Id\"> Employee Id: </Lable></TableColumn>\n                        <TableColumn><Input type=\"text\" name=\"code\" defaultValue={data.employee.code} onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Email\"> Email: </Lable></TableColumn>\n                        <TableColumn><Input type=\"email\" name=\"email\" defaultValue={data.employee.email} onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Mobile Number\"> Mobile Number: </Lable></TableColumn>\n                        <TableColumn><Input placeholder=\" +91 \" name=\"mobileNo\" defaultValue={data.employee.mobileNo} onChange={handleChange} type=\"number\" required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Department\"> Department: </Lable></TableColumn>\n                        <TableColumn><SelectBox className=\"Selectbox1\" name=\"department\" defaultValue={data.employee.department} onChange={handleChange} required>\n                            <Option disabled selected value> Select an Option</Option>\n                            <Option value=\"HR\"> HR </Option>\n                            <Option value=\"ADMIN\"> ADMIN </Option>\n                            <Option value=\"ACCOUNTING\"> ACCOUNTING </Option>\n                            <Option value=\"IT\"> IT </Option>\n                        </SelectBox></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Role\"> Role: </Lable></TableColumn>\n                        <TableColumn><SelectBox className=\"Selectbox1\" name=\"role\" defaultValue={data.employee.role} onChange={handleChange} required>\n                            <Option disabled selected value> Select an Option</Option>\n                            <Option value=\"ADMIN\"> ADMIN </Option>\n                            <Option value=\"SUPER ADMIN\"> SUPER ADMIN </Option>\n                            <Option value=\"ACCOUNTANT\"> ACCOUNTANT </Option>\n                            <Option value=\"SOFTWARE ENGINEER\"> SOFTWARE ENGINEER </Option>\n                            <Option value=\"SENIOR-SOFTWARE ENGINEER\"> SENIOR-SOFTWARE ENGINEER </Option>\n                        </SelectBox></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Date-Containerat\" className=\"Selectbox1\"> Join Date: </Lable></TableColumn>\n                        <TableColumn> <Input type=\"date\" placeholder=\"dd-mm-yyyy\" name=\"joinedDate\" defaultValue={data.employee.joinedDate} onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Button type=\"Cancel\">\n                            <LinkTag to={\"/list\"}>Cancel</LinkTag>\n                        </Button></TableColumn>\n\n\n                        <TableColumn><Button onClick={handleSubmit}>\n                            <LinkTag to={\"/list\"}>\n                                Submit\n                        </LinkTag>\n                        </Button></TableColumn>\n\n                    </TableRow>\n\n                </Table>\n\n            </Container>\n\n        </Fragment>\n    );\n}\n","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/EmployeeDetails.js",["103","104","105","106","107","108","109","110","111"],"import React, { Component, Fragment, useState } from 'react'\nimport Styled from '@emotion/styled';\nimport { Link, useParams } from 'react-router-dom';\nimport { useMutation, gql, useQuery } from '@apollo/client';\n\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\nposition: sticky;\ntop:0px;\npadding:8px;\ncolor:${(props) => props.color};\nfont-size:25px;\n`;\nconst Logo = Styled.img`\nheight:20px;\nwidth:20px\n`;\nconst Lable = Styled.label`\nfont-size:20px;\n`;\nconst Input = Styled.input`\nborder:none;\nwidth:230px;\nmargin-left:5px;\nheight:20px;\n`;\nconst Break = Styled.br`\n`;\nconst SelectBox = Styled.select`\n&.Selectbox1{\nwidth: 230px;\nmargin-left:5px;\nborder-radius:5px;\nheight:25px;\n}\n`;\nconst Option = Styled.option`\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: ${props =>\n        props.save ? 'powderblue' : 'white'};\nheight:30px;\nfont-size:20px;\nwidth:80px;\nborder-radius:5px;\n&:hover {\nopacity:0.5;\n`;\nconst Container = Styled.form`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\npadding:20px;\n`;\nconst Table = Styled.table`\n`;\nconst TableData = Styled.td`\n`;\nconst TableRow = Styled.tr`\n`;\nconst TableColumn = Styled.td`\n`;\nconst LinkTag = Styled(Link)` \ncolor:black; \ntext-decoration:none;\n`;\n\n\nexport const EmployeeDetails = () => {\n\n    const { id } = useParams();\n\n    const GetEmployeeById = gql`\n    query EmpDetails($id:String!){\n        employee(id:$id){\n            name\n            code\n            email\n            mobileNo\n            department\n            role\n            joinedDate\n        }\n    }\n    `;\n\n    const { loading, error, data } = useQuery(GetEmployeeById, { variables: { id: id } });\n\n    if (loading) return <p>Loading....</p>\n    if (error) return <p>ERROR....</p>\n\n\n\n    return (\n        <Fragment>\n\n            <Navbar bgColor=\"grey\" color=\"white\">\n                Employee Details\n                        </Navbar>\n            <Break />\n            <Container >\n\n                <Table >\n\n                    <TableRow>\n\n                        <TableColumn ><Lable htmlFor=\"Name\"> Name</Lable></TableColumn>\n                        <TableColumn >:<Input value={data.employee.name} readOnly/></TableColumn>\n\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Empl-Id\"> Employee Code </Lable></TableColumn>\n                        <TableColumn>:<Input  value={data.employee.code}  readOnly/></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Email\"> Email </Lable></TableColumn>\n                        <TableColumn>:<Input  value={data.employee.email}  readOnly/></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Mobile Number\"> Mobile Number </Lable></TableColumn>\n                        <TableColumn>:<Input value={data.employee.mobileNo}  readOnly/></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Department\"> Department</Lable></TableColumn>\n                        <TableColumn>:<Input value={data.employee.department} readOnly/>\n                        </TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Role\"> Role</Lable></TableColumn>\n                        <TableColumn>:<Input value={data.employee.role}  readOnly/>\n                        </TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Date-Containerat\" className=\"Selectbox1\"> Join Date</Lable></TableColumn>\n                        <TableColumn>:<Input value={data.employee.joinedDate} readOnly/></TableColumn>\n                    </TableRow>\n                    <Break />\n                   \n                </Table>\n\n            </Container>\n\n        </Fragment>\n    );\n}\n","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/SearchEmpDetails.js",["112","113","114","115","116","117","118","119","120","121","122"],"import React, { Component, Fragment, useState } from 'react'\n\nimport Styled from '@emotion/styled';\nimport { Link, useParams } from 'react-router-dom';\nimport { useMutation, gql, useQuery } from '@apollo/client';\nimport { ListOfEmployee } from './ListOfEmployee';\nimport { graphql } from 'graphql';\n\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\nposition: sticky;\ntop:0px;\npadding:8px;\ncolor:${(props) => props.color};\nfont-size:25px;\n`;\nconst Logo = Styled.img`\nheight:20px;\nwidth:20px\n`;\nconst Lable = Styled.label`\nfont-size:20px;\n`;\nconst Input = Styled.input`\nborder:none;\nwidth:230px;\nmargin-left:5px;\nheight:20px;\n`;\nconst Break = Styled.br`\n`;\nconst SelectBox = Styled.select`\n&.Selectbox1{\nwidth: 230px;\nmargin-left:5px;\nborder-radius:5px;\nheight:25px;\n}\n`;\nconst Option = Styled.option`\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: ${props =>\n        props.save ? 'powderblue' : 'white'};\nheight:30px;\nfont-size:20px;\nwidth:80px;\nborder-radius:5px;\n&:hover {\nopacity:0.5;\n`;\nconst Container = Styled.form`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\npadding:20px;\n`;\nconst Table = Styled.table`\n`;\nconst TableData = Styled.td`\n`;\nconst TableRow = Styled.tr`\n`;\nconst TableColumn = Styled.td`\n`;\nconst LinkTag = Styled(Link)` \ncolor:black; \ntext-decoration:none;\n`;\n\n\nexport const EmpDetails = () => {\n\n    const { id } = useParams();\n\n    const GetEmployeeById = gql`\n    query EmpDetails($id:String!){\n        employee(id:$id){\n            name\n            code\n            email\n            mobileNo\n            department\n            role\n            joinedDate\n        }\n    }\n    `;\n\n    const { loading, error, data } = useQuery(GetEmployeeById, { variables: { id: id } });\n\n    if (loading) return <p>Loading....</p>\n    if (error) return <p>ERROR....</p>\n\n\n\n    return (\n        <Fragment>\n\n            <Navbar bgColor=\"grey\" color=\"white\">\n                Employee Details\n                        </Navbar>\n            <Break />\n            <Container >\n\n                <Table >\n\n                    <TableRow>\n\n                        <TableColumn ><Lable htmlFor=\"Name\"> Name</Lable></TableColumn>\n                        <TableColumn >:<Input value={data.employee.name} readOnly/></TableColumn>\n\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Empl-Id\"> Employee Id </Lable></TableColumn>\n                        <TableColumn>:<Input  value={data.employee.code}  readOnly/></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Email\"> Email </Lable></TableColumn>\n                        <TableColumn>:<Input  value={data.employee.email}  readOnly/></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Mobile Number\"> Mobile Number </Lable></TableColumn>\n                        <TableColumn>:<Input value={data.employee.mobileNo}  readOnly/></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Department\"> Department</Lable></TableColumn>\n                        <TableColumn>:<Input value={data.employee.department} readOnly/>\n                        </TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Role\"> Role</Lable></TableColumn>\n                        <TableColumn>:<Input value={data.employee.role}  readOnly/>\n                        </TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Date-Containerat\" className=\"Selectbox1\"> Join Date</Lable></TableColumn>\n                        <TableColumn>:<Input value={data.employee.joinedDate} readOnly/></TableColumn>\n                    </TableRow>\n                    <Break />\n                   \n                </Table>\n\n            </Container>\n\n        </Fragment>\n    );\n}","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/HR_Page.js",["123","124","125","126","127","128","129"],"import {React,Fragment} from \"react\";\nimport Styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nimport { useQuery, gql, useMutation } from '@apollo/client';\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n// import { faEdit, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport './images/mobile_black.png';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\ncolor: ${(props) => props.color};\nposition: sticky;\ntop: 0px;\nfont-size: 20px;\npadding: 8px;\ntext-align:${(props) => props.text};\n`;\nconst LinkTag = Styled(Link)`\ncolor:black;\ntext-decoration:none;\n`;\nconst Logo = Styled.img`\nheight: 30px;\nwidth: 30px;\nmargin-bottom:-5px;\n`;\nconst Table = Styled.table`\nborder-collapse: collapse;\nborder: 3px solid #ddd;\n`;\nconst TableData = Styled.td`\nborder: 3px solid #ddd;\nheight:30px;\nfont-size:20px;\nfont-weight:bold;\npadding:40px;\nvertical-align:bottom;\ntext-align:left;\n&:hover {background-color: grey;}\n`;\nconst TableRow = Styled.tr`\nborder: 3px solid #ddd;\n &:nth-child(even){background-color: #F2F2F2;}\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: ${props =>\n        props.save ? 'powderblue' : 'white'};\nheight:30px;\nfont-size:20px;\nwidth:80px;\nborder-radius:5px;\n&:hover {\nopacity:0.5;\n`;\nexport const HR=()=>{\n    return (\n        \n        <Fragment>\n            {/* <Navbar bgColor=\"powderblue\" color=\"black\">\n                    <Logo src={require(\"./images/mobile_black.png\") } /> Beeja\n                </Navbar> */}\n            <Navbar bgColor=\"grey\" color=\"white\" text=\"center\">\n                HR\n                    </Navbar>\n            <Table>\n                <TableRow>\n                    <TableRow><TableData>LEAVE MANAGEMENT</TableData></TableRow>\n                    <TableRow><TableData> LEAVE POLICY</TableData></TableRow>\n                    <TableRow><TableData>\n                        <LinkTag to={\"/personal\"}>\n                        PERSONAL DETAILS\n                        </LinkTag></TableData></TableRow>\n                    <TableRow><TableData>OFFER LETTER INCREMENT</TableData></TableRow>\n                    <TableRow ><TableData>DOCUMENTS</TableData></TableRow>      \n                </TableRow>\n            </Table>\n        </Fragment>\n    )\n}\n","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/CreatePersonalDetails.js",["130","131","132","133"],"import React, { Fragment, useState } from 'react'\nimport Styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nimport { useMutation, gql, useQuery } from '@apollo/client';\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\nposition: sticky;\ntop:0px;\npadding:8px;\ncolor:${(props) => props.color};\nfont-size:25px;\n`;\nconst Logo = Styled.img`\nheight:20px;\nwidth:20px\n`;\nconst Lable = Styled.label`\nfont-size:20px;\n`;\nconst Input = Styled.input`\nborder-radius:5px;\nwidth:230px;\nmargin-left:5px;\nheight:25px;\n`;\nconst Break = Styled.br`\n`;\nconst SelectBox = Styled.select`\n&.Selectbox1{\nwidth: 230px;\nmargin-left:5px;\nborder-radius:5px;\nheight:25px;\n}\n`;\nconst Option = Styled.option`\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: ${props =>\n       props.save ? 'powderblue' : 'white'};\nheight:30px;\nfont-size:20px;\nwidth:80px;\nborder-radius:5px;\n&:hover {\nopacity:0.5;\n`;\nconst Container = Styled.form`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\npadding:20px;\n`;\nconst Table = Styled.table`\n`;\nconst TableData = Styled.td`\n`;\nconst TableRow = Styled.tr`\n`;\nconst TableColumn = Styled.td`\n`;\nconst LinkTag = Styled(Link)` \ncolor:black; \ntext-decoration:none;\n`;\nexport const Create_PersonalDetails=()=>{\n\n    const [formData, createFormData] = useState({\n        name:\"\",\n        code: \"\",\n        email: \" \",\n       role: \"\",\n        pan: \"\",\n       account: \"\",\n        ifsc: \"\"\n    });\n\n    const Personal = gql`\n     mutation {\n        createPersonalDetails(data:{\n              name:\"${formData.name}\",\n              code:\"${formData.code}\",\n              email:\"${formData.email}\",\n              role:\"${formData.role}\",\n              pan_No:\"${formData.pan}\",\n              account_No:\"${formData.account}\",\n              ifsc_code:\"${formData.ifsc}\"   \n           })\n                  {\n                      respCode, respMessage\n                  }\n              }\n          `;\n    const [PDCreate, { loading, error, data }] = useMutation(Personal);\n    if (loading) return <p>Loading ...</p>;\n    if (error) return <p>Error</p>;\n\n    const handleChange = (e) => {\n        createFormData({\n            ...formData,\n            [e.target.name]: e.target.value.trim()\n        });\n    };\n    const handleSubmit = (e) => {\n        e.preventDefault()\n      PDCreate();\n    };\n   console.log(formData.name);\n    return(\n        <Fragment>\n            <Navbar bgColor=\"grey\" color=\"white\">\n                Add Personal Details\n                        </Navbar>\n            <Break />\n            <Container >\n                <Table >\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Name\"> Name: </Lable></TableColumn>\n                        <TableColumn ><Input type=\"text\" name=\"user\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Empl-Id\"> Employee Code: </Lable></TableColumn>\n                        <TableColumn><Input type=\"text\"  onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Email\"> Email: </Lable></TableColumn>\n                        <TableColumn><Input type=\"email\"   onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                   \n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Role\"> Role: </Lable></TableColumn>\n                        <TableColumn><SelectBox className=\"Selectbox1\" name=\"role\"  onChange={handleChange} required>\n                            <Option disabled selected value> Select an Option</Option>\n                            <Option value=\"ADMIN\"> ADMIN </Option>\n                            <Option value=\"SUPER ADMIN\"> SUPER ADMIN </Option>\n                            <Option value=\"ACCOUNTANT\"> ACCOUNTANT </Option>\n                            <Option value=\"SOFTWARE ENGINEER\"> SOFTWARE ENGINEER </Option>\n                            <Option value=\"SENIOR-SOFTWARE ENGINEER\"> SENIOR-SOFTWARE ENGINEER </Option>\n                        </SelectBox></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"PAN\"> PAN: </Lable></TableColumn>\n                        <TableColumn><Input   onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Account Number\" >Account Number: </Lable></TableColumn>\n                        <TableColumn><Input  onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"IFSC Code\">IFSC Code: </Lable></TableColumn>\n                        <TableColumn><Input  onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn >\n                            <Button type=\"Cancel\">\n                                <LinkTag to={\"/personal\"}>Cancel</LinkTag>\n                            </Button>\n                        </TableColumn>\n\n                        <TableColumn>\n                            <Button onClick={handleSubmit}>\n                                <LinkTag to={\"/personal\"}>Submit</LinkTag>\n                            </Button>\n                        </TableColumn>\n                    </TableRow>\n                </Table>\n\n            </Container>\n\n        </Fragment>\n    )\n}","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/ListofPersonalDetails.js",["134","135","136","137"],"import {React,Fragment} from \"react\";\nimport Styled from '@emotion/styled';\nimport { Link, useParams } from 'react-router-dom';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n import { faPlus,faEdit, faTrash} from '@fortawesome/free-solid-svg-icons';\n import { useQuery, gql, useMutation } from '@apollo/client';\n\n\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\nposition: sticky;\ntop: 0px;\npadding: 8px;\ncolor: ${(props) => props.color};\nfont-size: 20px;\n`;\nconst Logo = Styled.img`\nheight: 30px;\nwidth: 30px;\nmargin-bottom: -5px;\n`;\nconst Break = Styled.br`\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: powderblue;\nheight:27px;\nmargin-top: -3px;\nfont-size: 13px;\noutline: none;\nborder: none;\nwidth: 100px;\nfloat: right;\nborder-radius: 5px;\n&:hover {\nopacity: 0.5;\n`;\nconst Container = Styled.form`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\npadding: 8px;\n`;\nconst Table = Styled.table`\nborder-collapse: collapse;\nborder: 1px solid #ddd;\nwidth: 100%;\npadding: 20px;\n`;\nconst TableRow = Styled.tr`\nborder: 1px solid #ddd;\n&:nth-child(even){background-color: #F2F2F2;}\n&:hover {background-color: #ddd;}\n`;\nconst TableData = Styled.td`\nborder: 1px solid #ddd;\nheight: 30px;\nvertical-align: bottom;\ntext-align:left;\n`;\nconst TableHeading = Styled.th`\nborder: 1px solid #ddd;\nheight: 10px;\npadding:8px;\ntext-align:left;\n`;\nconst LinkTag = Styled(Link)`\ncolor:black;\ntext-decoration:none;\n`;\nconst Hover =Styled.a`\n&:hover {\n    color:blue;\n`;\n export const PersonalDetails=()=>{\n    const {id}= useParams();\n\nconst Show =gql`\n{ \n    personalList{\n        id\n        name\n        code\n        email\n        role\n        pan_No\n        account_No\n        ifsc_code\n    }\n }`;\n\n\nconst {loading, error, data} = useQuery(Show);\nconsole.log(data);\nif(loading) return <p>loading</p>;\nif(error) return <p>Error</p>;\n\n\nreturn(\n    <Fragment>\n<Navbar bgColor=\"grey\" color=\"white\">Personal Details\n<Button >\n<LinkTag to={\"/createpresonal\"}>\n    <FontAwesomeIcon icon={faPlus}></FontAwesomeIcon>    ADD</LinkTag>\n </Button>\n</Navbar>\n            <Break />\n            <Container>\n                <Table>\n                    <TableRow>\n                        <TableHeading> ID</TableHeading>\n                        <TableHeading>Employee Name</TableHeading>\n                        <TableHeading>Email</TableHeading>\n                        <TableHeading>Role</TableHeading>\n                    <TableHeading>PAN</TableHeading>\n                    <TableHeading>Account Number</TableHeading>\n                    <TableHeading>IFSC Code</TableHeading>\n                        <TableHeading>Edit</TableHeading>\n                        <TableHeading>Delete</TableHeading>\n                  </TableRow>\n                  {data.personalList.map((emp, id) => (\n      <TableRow>\n          <a href=\"\">\n                        <LinkTag to={`/pd/${emp.id}`}>\n                               <Hover> \n                                   <TableData key={id}>{emp.code}</TableData>\n                               </Hover>\n                                </LinkTag>\n                                </a>\n          <TableData>{emp.name}</TableData>\n          <TableData>{emp.email}</TableData>\n          <TableData>{emp.role}</TableData>\n          <TableData>{emp.pan_No}</TableData>\n          <TableData>{emp.account_No}</TableData>\n          <TableData>{emp.ifsc_code}</TableData>\n          <TableData style={{ \"text-align\": \"center\" }} >\n                             \n                                    <FontAwesomeIcon icon={faEdit} ></FontAwesomeIcon>\n                              \n                            </TableData>\n                            <TableData style={{ \"text-align\": \"center\" }} >\n                              \n                                    <FontAwesomeIcon icon={faTrash}></FontAwesomeIcon>\n                               \n                            </TableData>\n         \n      </TableRow>\n  ))\n\n  }\n                </Table>\n            </Container>\n\n    </Fragment>\n\n)\n}","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/PersonalDetails.js",["138","139","140","141","142","143","144","145","146"],"import React, { Component, Fragment, useState } from 'react'\n\nimport Styled from '@emotion/styled';\nimport { Link, useParams } from 'react-router-dom';\nimport { useMutation, gql, useQuery } from '@apollo/client';\n\n\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\nposition: sticky;\ntop:0px;\npadding:8px;\ncolor:${(props) => props.color};\nfont-size:25px;\n`;\nconst Logo = Styled.img`\nheight:20px;\nwidth:20px\n`;\nconst Lable = Styled.label`\nfont-size:20px;\n`;\nconst Input = Styled.input`\nborder:none;\nwidth:230px;\nmargin-left:5px;\nheight:20px;\n`;\nconst Break = Styled.br`\n`;\nconst SelectBox = Styled.select`\n&.Selectbox1{\nwidth: 230px;\nmargin-left:5px;\nborder-radius:5px;\nheight:25px;\n}\n`;\nconst Option = Styled.option`\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: ${props =>\n        props.save ? 'powderblue' : 'white'};\nheight:30px;\nfont-size:20px;\nwidth:80px;\nborder-radius:5px;\n&:hover {\nopacity:0.5;\n`;\nconst Container = Styled.form`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\npadding:20px;\n`;\nconst Table = Styled.table`\n`;\nconst TableData = Styled.td`\n`;\nconst TableRow = Styled.tr`\n`;\nconst TableColumn = Styled.td`\n`;\nconst LinkTag = Styled(Link)` \ncolor:black; \ntext-decoration:none;\n`;\n\n\nexport const Personal_Details = () => {\n\n    const [personState, setState] = useState({\n        name: \"\",\n        code: \"\",\n        email:\"\",\n        role: \" \",\n        pan_No: \"\",\n        account_No: \"\",\n        ifsc_code: \"\"\n    })\n\n    const { id } = useParams();\n\n    const DisplayPD =gql`\n    query PDDisplay($id:String!){\n        personaldetalis(id:$id){\n            name\n            code\n            email\n            role\n            pan_No\n            account_No\n            ifsc_code\n          }\n    }\n    `;\n\n    const { loading, error, data } = useQuery(DisplayPD, { variables: { id: id } });\n\n    if (loading) return <p>Loading....</p>\n    if (error) return <p>ERROR....</p>\n    if (data && data.personaldetalis) {\n        personState.name = data.personaldetalis.name;\n        personState.code = data.personaldetalis.code;\n        personState.email = data.personaldetalis.email;\n        personState.role = data.personaldetalis.role;\n        personState.pan_No = data.personaldetalis.pan_No;\n        personState.account_No = data.personaldetalis.account_No;\n        personState.ifsc_code = data.personaldetalis.ifsc_code;\n    }\n\n    return (\n        <Fragment>\n\n            <Navbar bgColor=\"grey\" color=\"white\">\n                Personal Details\n                        </Navbar>\n            <Break />\n            <Container >\n\n                <Table >\n\n                    <TableRow>\n\n                        <TableColumn ><Lable htmlFor=\"name\"> Name</Lable></TableColumn>\n                        <TableColumn >:<Input value={personState.name}/></TableColumn>\n\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Empl-Id\"> Employee Code </Lable></TableColumn>\n                        <TableColumn>:<Input  value={personState.code}  readOnly/></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Email\"> Email </Lable></TableColumn>\n                        <TableColumn>:<Input  value={personState.email}  readOnly/></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Role\"> Role</Lable></TableColumn>\n                        <TableColumn>:<Input value={personState.role}  readOnly/></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"PAN\"> PAN</Lable></TableColumn>\n                        <TableColumn>:<Input value={personState.pan_No}  readOnly/></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Account Number\"> Account Number</Lable></TableColumn>\n                        <TableColumn>:<Input value={personState.account_No}  readOnly/></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"IFSC\"> IFSC</Lable></TableColumn>\n                        <TableColumn>:<Input value={personState.ifsc_code}  readOnly/></TableColumn>\n                    </TableRow>\n                </Table>\n\n            </Container>\n\n        </Fragment>\n    );\n}\n",{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","severity":1,"message":"152","line":16,"column":10,"nodeType":"153","messageId":"154","endLine":16,"endColumn":14},{"ruleId":"147","replacedBy":"155"},{"ruleId":"149","replacedBy":"156"},{"ruleId":"151","severity":1,"message":"157","line":1,"column":17,"nodeType":"153","messageId":"154","endLine":1,"endColumn":26},{"ruleId":"151","severity":1,"message":"158","line":5,"column":10,"nodeType":"153","messageId":"154","endLine":5,"endColumn":18},{"ruleId":"151","severity":1,"message":"159","line":5,"column":20,"nodeType":"153","messageId":"154","endLine":5,"endColumn":23},{"ruleId":"151","severity":1,"message":"160","line":5,"column":25,"nodeType":"153","messageId":"154","endLine":5,"endColumn":36},{"ruleId":"151","severity":1,"message":"161","line":9,"column":10,"nodeType":"153","messageId":"154","endLine":9,"endColumn":24},{"ruleId":"151","severity":1,"message":"162","line":9,"column":26,"nodeType":"153","messageId":"154","endLine":9,"endColumn":31},{"ruleId":"151","severity":1,"message":"163","line":25,"column":7,"nodeType":"153","messageId":"154","endLine":25,"endColumn":11},{"ruleId":"151","severity":1,"message":"164","line":48,"column":7,"nodeType":"153","messageId":"154","endLine":48,"endColumn":13},{"ruleId":"151","severity":1,"message":"157","line":1,"column":17,"nodeType":"153","messageId":"154","endLine":1,"endColumn":26},{"ruleId":"151","severity":1,"message":"163","line":17,"column":7,"nodeType":"153","messageId":"154","endLine":17,"endColumn":11},{"ruleId":"151","severity":1,"message":"165","line":67,"column":7,"nodeType":"153","messageId":"154","endLine":67,"endColumn":19},{"ruleId":"151","severity":1,"message":"166","line":74,"column":7,"nodeType":"153","messageId":"154","endLine":74,"endColumn":15},{"ruleId":"151","severity":1,"message":"167","line":104,"column":13,"nodeType":"153","messageId":"154","endLine":104,"endColumn":15},{"ruleId":"168","severity":1,"message":"169","line":185,"column":29,"nodeType":"170","endLine":185,"endColumn":40},{"ruleId":"151","severity":1,"message":"161","line":5,"column":10,"nodeType":"153","messageId":"154","endLine":5,"endColumn":24},{"ruleId":"151","severity":1,"message":"163","line":18,"column":7,"nodeType":"153","messageId":"154","endLine":18,"endColumn":11},{"ruleId":"151","severity":1,"message":"171","line":62,"column":7,"nodeType":"153","messageId":"154","endLine":62,"endColumn":16},{"ruleId":"151","severity":1,"message":"172","line":101,"column":46,"nodeType":"153","messageId":"154","endLine":101,"endColumn":50},{"ruleId":"151","severity":1,"message":"157","line":1,"column":17,"nodeType":"153","messageId":"154","endLine":1,"endColumn":26},{"ruleId":"151","severity":1,"message":"173","line":6,"column":10,"nodeType":"153","messageId":"154","endLine":6,"endColumn":24},{"ruleId":"151","severity":1,"message":"174","line":7,"column":10,"nodeType":"153","messageId":"154","endLine":7,"endColumn":17},{"ruleId":"151","severity":1,"message":"163","line":17,"column":7,"nodeType":"153","messageId":"154","endLine":17,"endColumn":11},{"ruleId":"151","severity":1,"message":"171","line":61,"column":7,"nodeType":"153","messageId":"154","endLine":61,"endColumn":16},{"ruleId":"151","severity":1,"message":"157","line":1,"column":17,"nodeType":"153","messageId":"154","endLine":1,"endColumn":26},{"ruleId":"151","severity":1,"message":"175","line":1,"column":38,"nodeType":"153","messageId":"154","endLine":1,"endColumn":46},{"ruleId":"151","severity":1,"message":"160","line":4,"column":10,"nodeType":"153","messageId":"154","endLine":4,"endColumn":21},{"ruleId":"151","severity":1,"message":"163","line":14,"column":7,"nodeType":"153","messageId":"154","endLine":14,"endColumn":11},{"ruleId":"151","severity":1,"message":"176","line":29,"column":7,"nodeType":"153","messageId":"154","endLine":29,"endColumn":16},{"ruleId":"151","severity":1,"message":"177","line":37,"column":7,"nodeType":"153","messageId":"154","endLine":37,"endColumn":13},{"ruleId":"151","severity":1,"message":"164","line":39,"column":7,"nodeType":"153","messageId":"154","endLine":39,"endColumn":13},{"ruleId":"151","severity":1,"message":"171","line":58,"column":7,"nodeType":"153","messageId":"154","endLine":58,"endColumn":16},{"ruleId":"151","severity":1,"message":"178","line":64,"column":7,"nodeType":"153","messageId":"154","endLine":64,"endColumn":14},{"ruleId":"151","severity":1,"message":"157","line":1,"column":17,"nodeType":"153","messageId":"154","endLine":1,"endColumn":26},{"ruleId":"151","severity":1,"message":"175","line":1,"column":38,"nodeType":"153","messageId":"154","endLine":1,"endColumn":46},{"ruleId":"151","severity":1,"message":"160","line":5,"column":10,"nodeType":"153","messageId":"154","endLine":5,"endColumn":21},{"ruleId":"151","severity":1,"message":"173","line":6,"column":10,"nodeType":"153","messageId":"154","endLine":6,"endColumn":24},{"ruleId":"151","severity":1,"message":"174","line":7,"column":10,"nodeType":"153","messageId":"154","endLine":7,"endColumn":17},{"ruleId":"151","severity":1,"message":"163","line":17,"column":7,"nodeType":"153","messageId":"154","endLine":17,"endColumn":11},{"ruleId":"151","severity":1,"message":"176","line":32,"column":7,"nodeType":"153","messageId":"154","endLine":32,"endColumn":16},{"ruleId":"151","severity":1,"message":"177","line":40,"column":7,"nodeType":"153","messageId":"154","endLine":40,"endColumn":13},{"ruleId":"151","severity":1,"message":"164","line":42,"column":7,"nodeType":"153","messageId":"154","endLine":42,"endColumn":13},{"ruleId":"151","severity":1,"message":"171","line":61,"column":7,"nodeType":"153","messageId":"154","endLine":61,"endColumn":16},{"ruleId":"151","severity":1,"message":"178","line":67,"column":7,"nodeType":"153","messageId":"154","endLine":67,"endColumn":14},{"ruleId":"151","severity":1,"message":"158","line":4,"column":10,"nodeType":"153","messageId":"154","endLine":4,"endColumn":18},{"ruleId":"151","severity":1,"message":"159","line":4,"column":20,"nodeType":"153","messageId":"154","endLine":4,"endColumn":23},{"ruleId":"151","severity":1,"message":"160","line":4,"column":25,"nodeType":"153","messageId":"154","endLine":4,"endColumn":36},{"ruleId":"151","severity":1,"message":"161","line":8,"column":10,"nodeType":"153","messageId":"154","endLine":8,"endColumn":24},{"ruleId":"151","severity":1,"message":"162","line":8,"column":26,"nodeType":"153","messageId":"154","endLine":8,"endColumn":31},{"ruleId":"151","severity":1,"message":"163","line":24,"column":7,"nodeType":"153","messageId":"154","endLine":24,"endColumn":11},{"ruleId":"151","severity":1,"message":"164","line":47,"column":7,"nodeType":"153","messageId":"154","endLine":47,"endColumn":13},{"ruleId":"151","severity":1,"message":"158","line":4,"column":28,"nodeType":"153","messageId":"154","endLine":4,"endColumn":36},{"ruleId":"151","severity":1,"message":"163","line":13,"column":7,"nodeType":"153","messageId":"154","endLine":13,"endColumn":11},{"ruleId":"151","severity":1,"message":"171","line":57,"column":7,"nodeType":"153","messageId":"154","endLine":57,"endColumn":16},{"ruleId":"151","severity":1,"message":"172","line":95,"column":40,"nodeType":"153","messageId":"154","endLine":95,"endColumn":44},{"ruleId":"151","severity":1,"message":"160","line":6,"column":26,"nodeType":"153","messageId":"154","endLine":6,"endColumn":37},{"ruleId":"151","severity":1,"message":"163","line":17,"column":7,"nodeType":"153","messageId":"154","endLine":17,"endColumn":11},{"ruleId":"151","severity":1,"message":"167","line":76,"column":12,"nodeType":"153","messageId":"154","endLine":76,"endColumn":14},{"ruleId":"168","severity":1,"message":"169","line":123,"column":11,"nodeType":"170","endLine":123,"endColumn":22},{"ruleId":"151","severity":1,"message":"157","line":1,"column":17,"nodeType":"153","messageId":"154","endLine":1,"endColumn":26},{"ruleId":"151","severity":1,"message":"160","line":5,"column":10,"nodeType":"153","messageId":"154","endLine":5,"endColumn":21},{"ruleId":"151","severity":1,"message":"163","line":16,"column":7,"nodeType":"153","messageId":"154","endLine":16,"endColumn":11},{"ruleId":"151","severity":1,"message":"176","line":31,"column":7,"nodeType":"153","messageId":"154","endLine":31,"endColumn":16},{"ruleId":"151","severity":1,"message":"177","line":39,"column":7,"nodeType":"153","messageId":"154","endLine":39,"endColumn":13},{"ruleId":"151","severity":1,"message":"164","line":41,"column":7,"nodeType":"153","messageId":"154","endLine":41,"endColumn":13},{"ruleId":"151","severity":1,"message":"171","line":60,"column":7,"nodeType":"153","messageId":"154","endLine":60,"endColumn":16},{"ruleId":"151","severity":1,"message":"178","line":66,"column":7,"nodeType":"153","messageId":"154","endLine":66,"endColumn":14},{"ruleId":"151","severity":1,"message":"179","line":74,"column":25,"nodeType":"153","messageId":"154","endLine":74,"endColumn":33},"no-native-reassign",["180"],"no-negated-in-lhs",["181"],"no-unused-vars","'from' is defined but never used.","Identifier","unusedVar",["180"],["181"],"'Component' is defined but never used.","'useQuery' is defined but never used.","'gql' is defined but never used.","'useMutation' is defined but never used.","'ToastContainer' is defined but never used.","'toast' is defined but never used.","'Logo' is assigned a value but never used.","'Button' is assigned a value but never used.","'Actionbutton' is assigned a value but never used.","'IdButton' is assigned a value but never used.","'id' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'TableData' is assigned a value but never used.","'data' is assigned a value but never used.","'ListOfEmployee' is defined but never used.","'graphql' is defined but never used.","'useState' is defined but never used.","'SelectBox' is assigned a value but never used.","'Option' is assigned a value but never used.","'LinkTag' is assigned a value but never used.","'setState' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]