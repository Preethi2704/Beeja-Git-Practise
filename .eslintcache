[{"/home/preethibandari/Desktop/Dev/Project/Beeja/my-beeja/beejafrontend/src/index.js":"1","/home/preethibandari/Desktop/Dev/Project/Beeja/my-beeja/beejafrontend/src/App.js":"2","/home/preethibandari/Desktop/Dev/Project/Beeja/my-beeja/beejafrontend/src/history.js":"3","/home/preethibandari/Desktop/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/LoginPage.js":"4","/home/preethibandari/Desktop/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/ListOfEmployee.js":"5","/home/preethibandari/Desktop/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/HomePage.js":"6","/home/preethibandari/Desktop/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/CreateEmployee.js":"7","/home/preethibandari/Desktop/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/CreatePersonalDetails.js":"8","/home/preethibandari/Desktop/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/EditEmployee.js":"9","/home/preethibandari/Desktop/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/EmployeeDetails.js":"10","/home/preethibandari/Desktop/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/HR_Page.js":"11","/home/preethibandari/Desktop/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/ListofPersonalDetails.js":"12","/home/preethibandari/Desktop/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/PersonalDetails.js":"13","/home/preethibandari/Desktop/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/EditPersonalDetails.js":"14","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/index.js":"15","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/App.js":"16","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/history.js":"17","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/ListOfEmployee.js":"18","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/HomePage.js":"19","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/ListofPersonalDetails.js":"20","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/PersonalDetails.js":"21","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/LoginPage.js":"22","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/HR_Page.js":"23","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/CreateEmployee.js":"24","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/EditEmployee.js":"25","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/EmployeeDetails.js":"26","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/CreatePersonalDetails.js":"27","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/EditPersonalDetails.js":"28","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/Accounting.js":"29","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/SystemDetails.js":"30","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/CreateSystemDetails.js":"31","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/EditSystemDetails.js":"32"},{"size":712,"mtime":1609733795367,"results":"33","hashOfConfig":"34"},{"size":1701,"mtime":1613328640836,"results":"35","hashOfConfig":"34"},{"size":84,"mtime":1607967946513,"results":"36","hashOfConfig":"34"},{"size":1912,"mtime":1611404068305,"results":"37","hashOfConfig":"34"},{"size":5507,"mtime":1613327142384,"results":"38","hashOfConfig":"34"},{"size":2383,"mtime":1612261702400,"results":"39","hashOfConfig":"34"},{"size":6707,"mtime":1613326704832,"results":"40","hashOfConfig":"34"},{"size":5942,"mtime":1612196881818,"results":"41","hashOfConfig":"34"},{"size":7120,"mtime":1613326639630,"results":"42","hashOfConfig":"34"},{"size":4711,"mtime":1613328470136,"results":"43","hashOfConfig":"34"},{"size":2306,"mtime":1613326486594,"results":"44","hashOfConfig":"34"},{"size":5112,"mtime":1613327045754,"results":"45","hashOfConfig":"34"},{"size":4601,"mtime":1613328185565,"results":"46","hashOfConfig":"34"},{"size":6588,"mtime":1613326628795,"results":"47","hashOfConfig":"34"},{"size":712,"mtime":1609733795367,"results":"48","hashOfConfig":"49"},{"size":2210,"mtime":1614488279574,"results":"50","hashOfConfig":"49"},{"size":84,"mtime":1607967946513,"results":"51","hashOfConfig":"49"},{"size":5423,"mtime":1614427961085,"results":"52","hashOfConfig":"49"},{"size":2283,"mtime":1614426535211,"results":"53","hashOfConfig":"49"},{"size":5042,"mtime":1614427851112,"results":"54","hashOfConfig":"49"},{"size":4599,"mtime":1614426025962,"results":"55","hashOfConfig":"49"},{"size":1901,"mtime":1614164533098,"results":"56","hashOfConfig":"49"},{"size":2299,"mtime":1614164485779,"results":"57","hashOfConfig":"49"},{"size":6707,"mtime":1614426027966,"results":"58","hashOfConfig":"49"},{"size":7120,"mtime":1613326639630,"results":"59","hashOfConfig":"49"},{"size":4711,"mtime":1613328470136,"results":"60","hashOfConfig":"49"},{"size":5942,"mtime":1612196881818,"results":"61","hashOfConfig":"49"},{"size":6563,"mtime":1614164468212,"results":"62","hashOfConfig":"49"},{"size":4936,"mtime":1614488414979,"results":"63","hashOfConfig":"49"},{"size":4342,"mtime":1614431717298,"results":"64","hashOfConfig":"49"},{"size":5339,"mtime":1614486516784,"results":"65","hashOfConfig":"49"},{"size":5773,"mtime":1614488870209,"results":"66","hashOfConfig":"49"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3pwomj",{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},"xj1n5e",{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"97"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"97"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"97"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"97"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"97"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"97"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"97"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"97"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":1,"source":"128","usedDeprecatedRules":"97"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"97"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"135"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"97"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"97"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"97"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"97"},"/home/preethibandari/Desktop/Dev/Project/Beeja/my-beeja/beejafrontend/src/index.js",[],"/home/preethibandari/Desktop/Dev/Project/Beeja/my-beeja/beejafrontend/src/App.js",["148"],"/home/preethibandari/Desktop/Dev/Project/Beeja/my-beeja/beejafrontend/src/history.js",[],"/home/preethibandari/Desktop/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/LoginPage.js",[],"/home/preethibandari/Desktop/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/ListOfEmployee.js",["149","150","151","152","153","154","155","156"],"/home/preethibandari/Desktop/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/HomePage.js",["157","158","159","160","161","162","163","164"],"/home/preethibandari/Desktop/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/CreateEmployee.js",["165","166","167","168"],"/home/preethibandari/Desktop/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/CreatePersonalDetails.js",["169","170","171","172"],"/home/preethibandari/Desktop/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/EditEmployee.js",["173","174","175"],"/home/preethibandari/Desktop/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/EmployeeDetails.js",["176","177","178","179","180","181","182","183","184","185"],"/home/preethibandari/Desktop/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/HR_Page.js",["186","187","188","189","190","191","192"],"/home/preethibandari/Desktop/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/ListofPersonalDetails.js",["193","194","195"],"/home/preethibandari/Desktop/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/PersonalDetails.js",["196","197","198","199","200","201","202","203","204"],"/home/preethibandari/Desktop/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/EditPersonalDetails.js",["205","206","207"],"/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/index.js",[],["208","209"],"/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/App.js",["210"],"import React from 'react';\nimport { Route,Router, Switch } from \"react-router-dom\";\nimport history from './history';\nimport { LoginPage } from \"./component/LoginPage\";\nimport { HomePage } from \"./component/HomePage\";\nimport { ListOfEmployee } from \"./component/ListOfEmployee\";\nimport { CreateEmployee } from \"./component/CreateEmployee\";\nimport { EditEmployee } from \"./component/EditEmployee\";\nimport { EmployeeDetails } from \"./component/EmployeeDetails\";\nimport { HR } from \"./component/HR_Page\";\nimport { PersonalDetails } from './component/ListofPersonalDetails';\nimport { Create_PersonalDetails } from \"./component/CreatePersonalDetails\";\nimport { Personal_Details } from \"./component/PersonalDetails\"\nimport {EditPersonalDetails} from \"./component/EditPersonalDetails\";\nimport {SystemDetails} from \"./component/Accounting\";\nimport { System_Details } from \"./component/SystemDetails\";\nimport {CreateSystem} from \"./component/CreateSystemDetails\";\nimport {EditSystem} from \"./component/EditSystemDetails\";\n\nimport './App.css'\nimport { from } from '@apollo/client';\nfunction App() {\n  return (\n    <Router history={history}>\n      <Switch>\n        <Route exact path=\"/\" component={LoginPage} />\n        <Route exact path=\"/home\" component={HomePage} />\n        <Route exact path=\"/list\" component={ListOfEmployee} />\n        <Route exact path=\"/adding\" component={CreateEmployee} />\n        <Route exact path=\"/edit/:id/\" component={EditEmployee} />\n        <Route exact path=\"/display/:id/\" component={EmployeeDetails} />\n        <Route exact path=\"/hr\" component={HR} />\n        <Route exact path=\"/personal\" component={PersonalDetails} />\n        <Route exact path=\"/createpresonal\" component={Create_PersonalDetails} />\n        <Route exact path=\"/pd/:id/\" component={Personal_Details} />\n        <Route exact path=\"/editpersonal/:id\" component={EditPersonalDetails}/>\n        <Route exact path=\"/SystemDetails\" component={SystemDetails}/>\n        <Route exact path=\"/sd/:id\" component={System_Details} />\n        <Route exact path=\"/createsystem\" component={CreateSystem}/>\n        <Route exact path=\"/editsystem/:id\" component={EditSystem}/>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/history.js",[],"/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/ListOfEmployee.js",["211","212","213","214","215","216","217","218"],"import React, { Component, Fragment, useState, } from 'react';\nimport Styled from '@emotion/styled';\nimport { Link, useParams, useHistory } from 'react-router-dom'\nimport { useQuery, gql, useMutation } from '@apollo/client';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEdit, faTrash, faSearch } from '@fortawesome/free-solid-svg-icons'\n\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\nposition: sticky;\ntop: 0px;\npadding: 8px;\ncolor: ${(props) => props.color};\nfont-size: 20px;\n`;\nconst Logo = Styled.img`\nheight: 30px;\nwidth: 30px;\nmargin-bottom: -5px;\n`;\nconst Break = Styled.br`\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: powderblue;\nheight:27px;\nmargin-top: -3px;\nfont-size: 13px;\noutline: none;\nborder: none;\nwidth: 100px;\nfloat: right;\nborder-radius: 5px;\n&:hover {\nopacity: 0.5;\n`;\nconst Container = Styled.form`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\npadding: 8px;\n`;\nconst Table = Styled.table`\nborder-collapse: collapse;\nborder: 1px solid #ddd;\nwidth: 100%;\npadding: 20px;\n`;\nconst TableRow = Styled.tr`\nborder: 1px solid #ddd;\n&:nth-child(even){background-color: #F2F2F2;}\n&:hover {background-color: #ddd;}\n`;\nconst TableData = Styled.td`\nborder: 1px solid #ddd;\nheight: 30px;\nvertical-align: bottom;\ntext-align:left;\n`;\nconst TableHeading = Styled.th`\nborder: 1px solid #ddd;\nheight: 10px;\npadding:8px;\ntext-align:left;\n`;\nconst Actionbutton = Styled.button`\nheight:15px;\nwidth:15px;\ndisplay:inline-block;\nbackground-color:rgba(255,255,255,0.7);\nborder:1px solid gray;\n`;\nconst IdButton = Styled.button`\nborder:none;\noutline:none;\n    `;\nconst LinkTag = Styled(Link)`\ncolor:black;\ntext-decoration:none;\n`;\nconst Hover = Styled.a`\n&:hover {\n    color:blue;\n`;\nconst Input = Styled.input`\nborder-radius:5px;\nwidth:230px;\nmargin-left:57%;\nheight:25px;\nfont-size:15px;\n`;\n\n\nexport const ListOfEmployee = () => {\n\n    const { id } = useParams();\n\n    const Show = gql`\n{\n    employeeList{\n    id\n    name\n    code\n    email\n    role\n    department\n    joinedDate\n    mobileNo\n    }\n  }`;\n\n    const [empId, setEmpId] = useState({ 'idToDelete': \"\" });\n\n    const DELETE_Employee = gql`\n    mutation DeleteEmployee($id: String!){\n    deleteEmployee(id: $id){\n    respCode,\n    respMessage \n  }\n}\n`;\n\n    const { loading, error, data } = useQuery(Show);\n    const [deleteMutation] = useMutation(DELETE_Employee);\n\n    const handleDelete = (deleteId) => {\n        if (window.confirm(\"Do you really want to leave?\")) {\n            setEmpId({ 'idToDelete': deleteId });\n            console.log(\"handleDelte\", deleteId, empId);\n            deleteMutation({ variables: { id: deleteId } });\n\n        }\n        else {\n\n        }\n    };\n\n    if (loading) return <p>Loading ...</p>;\n    if (error) return <p>Error</p>;\n\n    return (\n\n        <Fragment>\n            <Navbar bgColor=\"grey\" color=\"white\">\n                List of Employee\n                <Input type=\"text\" placeholder=\"Search\" ></Input>\n                <Button >\n                    <LinkTag to={\"/adding\"}>Add Employee</LinkTag>\n                </Button>\n            </Navbar>\n            <Break />\n            <Container>\n                <Table>\n                    <TableRow>\n                        <TableHeading>ID</TableHeading>\n                        <TableHeading>Name</TableHeading>\n                        <TableHeading>Email</TableHeading>\n                        <TableHeading>Role</TableHeading>\n                        <TableHeading>Department</TableHeading>\n                        <TableHeading>JoiningDate</TableHeading>\n                        <TableHeading>MobileNumber</TableHeading>\n                        <TableHeading>Edit</TableHeading>\n                        <TableHeading>Delete</TableHeading>\n                    </TableRow>\n\n                    {data.employeeList.map((employee, id) => (\n                        <TableRow>\n                            <a href=\"\">\n                                <LinkTag to={`/display/${employee.id}`}>\n                                    <Hover>\n                                        <TableData key={id}>{employee.code}</TableData>\n                                    </Hover>\n                                </LinkTag>\n                            </a>\n                            <TableData>{employee.name}</TableData>\n                            <TableData>{employee.email}</TableData>\n                            <TableData>{employee.role}</TableData>\n                            <TableData>{employee.department}</TableData>\n                            <TableData>{employee.joinedDate}</TableData>\n                            <TableData>{employee.mobileNo}</TableData>\n\n                            <TableData style={{ \"text-align\": \"center\" }} >\n                                <LinkTag to={`/edit/${employee.id}`}>\n                                    <FontAwesomeIcon icon={faEdit} ></FontAwesomeIcon>\n                                </LinkTag>\n                            </TableData>\n                            <TableData style={{ \"text-align\": \"center\" }} >\n                                    <FontAwesomeIcon icon={faTrash} onClick={() => handleDelete(employee.id)}></FontAwesomeIcon>\n                            </TableData>\n                        </TableRow>\n                    )\n                    )}\n                </Table>\n            </Container>\n        </Fragment>\n    )\n}","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/HomePage.js",["219","220","221","222","223","224","225","226"],"import React, { Component, Fragment } from 'react'\nimport Styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nimport { useQuery, gql, useMutation } from '@apollo/client';\nimport './images/mobile_black.png';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\ncolor: ${(props) => props.color};\nposition: sticky;\ntop: 0px;\nfont-size: 20px;\npadding: 8px;\ntext-align:${(props) => props.text};\n`;\nconst LinkTag = Styled(Link)`\ncolor:black;\ntext-decoration:none;\n`;\nconst Logo = Styled.img`\nheight: 30px;\nwidth: 30px;\nmargin-bottom:-5px;\n`;\nconst Table = Styled.table`\nborder-collapse: collapse;\nborder: 3px solid #ddd;\n`;\nconst TableData = Styled.td`\nborder: 3px solid #ddd;\nheight:30px;\nfont-size:20px;\nfont-weight:bold;\npadding:40px;\nvertical-align:bottom;\ntext-align:left;\n&:hover {background-color: grey;}\n`;\nconst TableRow = Styled.tr`\nborder: 3px solid #ddd;\n &:nth-child(even){background-color: #F2F2F2;}\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: ${props =>\n        props.save ? 'powderblue' : 'white'};\nheight:30px;\nfont-size:20px;\nwidth:80px;\nborder-radius:5px;\n&:hover {\nopacity:0.5;\n`;\nexport const HomePage = () => {\n\n    return (\n\n        <Fragment>\n            <Navbar bgColor=\"grey\" color=\"white\" text=\"center\">\n                Home page\n                    </Navbar>\n            <Table>\n                <TableRow>\n                    <TableRow><TableData>\n                        <LinkTag to={\"/hr\"} >HR </LinkTag></TableData></TableRow>\n                    <TableRow><TableData>\n                        <LinkTag to={\"/SystemDetails\"}> ACCOUNTING</LinkTag>\n                    </TableData></TableRow>\n                    <TableRow><TableData>\n                        <LinkTag to={\"/list\"} >\n                            EMOPLOYEE DIRECTORY\n                             </LinkTag>\n                    </TableData></TableRow>\n                    <TableRow><TableData> CLIENT</TableData></TableRow>\n\n                    <TableRow ><TableData>\n\n                        DOCUMENTATION\n                        </TableData></TableRow>\n\n                </TableRow>\n            </Table>\n        </Fragment>\n    )\n}","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/ListofPersonalDetails.js",["227","228","229"],"import { React, Fragment, useState } from \"react\";\nimport Styled from '@emotion/styled';\nimport { Link, useParams } from 'react-router-dom';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faEdit, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { useQuery, gql, useMutation } from '@apollo/client';\n\n\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\nposition: sticky;\ntop: 0px;\npadding: 8px;\ncolor: ${(props) => props.color};\nfont-size: 20px;\n`;\nconst Logo = Styled.img`\nheight: 30px;\nwidth: 30px;\nmargin-bottom: -5px;\n`;\nconst Break = Styled.br`\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: powderblue;\nheight:27px;\nmargin-top: -3px;\nfont-size: 13px;\noutline: none;\nborder: none;\nwidth: 100px;\nfloat: right;\nborder-radius: 5px;\n&:hover {\nopacity: 0.5;\n`;\nconst Container = Styled.form`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\npadding: 8px;\n`;\nconst Table = Styled.table`\nborder-collapse: collapse;\nborder: 1px solid #ddd;\nwidth: 100%;\npadding: 20px;\n`;\nconst TableRow = Styled.tr`\nborder: 1px solid #ddd;\n&:nth-child(even){background-color: #F2F2F2;}\n&:hover {background-color: #ddd;}\n`;\nconst TableData = Styled.td`\nborder: 1px solid #ddd;\nheight: 30px;\nvertical-align: bottom;\ntext-align:left;\n`;\nconst TableHeading = Styled.th`\nborder: 1px solid #ddd;\nheight: 10px;\npadding:8px;\ntext-align:left;\n`;\nconst LinkTag = Styled(Link)`\ncolor:black;\ntext-decoration:none;\n`;\nconst Hover = Styled.a`\n&:hover {\n    color:blue;\n`;\nexport const PersonalDetails = () => {\n    const { id } = useParams();\n    const [empId, setEmpId] = useState({ 'idToDelete': \"\" });\n    const Show = gql`\n   query{ \n    personalList{\n        id\n        name\n        code\n        email\n        role\n        pan_No\n        account_No\n        ifsc_code\n    }\n }`;\n    const DELETE_PD = gql`\n mutation DeletePD($id: String!){\n    deletePersonalDetails(id: $id){\n respCode,\n respMessage \n}\n}\n`;\n\n    const { loading, error, data } = useQuery(Show);\n    const [deleteMutation] = useMutation(DELETE_PD);\n    const handleDelete = (deleteId) => {\n        if (window.confirm(\"Do you really want to leave?\")) {\n            setEmpId({ 'idToDelete': deleteId });\n            console.log(\"handleDelte\", deleteId, empId);\n            deleteMutation({ variables: { id: deleteId } });\n\n        }\n        else {\n\n        }\n    };\n\n\n    console.log(data);\n    if (loading) return <p>loading</p>;\n    if (error) return <p>Error</p>;\n\n    return (\n        <Fragment>\n            <Navbar bgColor=\"grey\" color=\"white\">Personal Details\n<Button >\n                    <LinkTag to={\"/createpresonal\"}>\n                        <FontAwesomeIcon icon={faPlus}></FontAwesomeIcon>    ADD</LinkTag>\n                </Button>\n            </Navbar>\n            <Break />\n            <Container>\n                <Table>\n                    <TableRow>\n                        <TableHeading>ID</TableHeading>\n                        <TableHeading>Name</TableHeading>\n                        <TableHeading>Email</TableHeading>\n                        <TableHeading>Role</TableHeading>\n                        <TableHeading>PAN</TableHeading>\n                        <TableHeading>Account Number</TableHeading>\n                        <TableHeading>IFSC Code</TableHeading>\n                        <TableHeading>Edit</TableHeading>\n                        <TableHeading>Delete</TableHeading>\n                    </TableRow>\n                    {data.personalList.map((emp, id) => (\n                        <TableRow>\n                            <a href=\"\">\n                                <LinkTag to={`/pd/${emp.id}`}>\n                                    <Hover>\n                                        <TableData key={id}>{emp.code}</TableData>\n                                    </Hover>\n                                </LinkTag>\n                            </a>\n                            <TableData>{emp.name}</TableData>\n                            <TableData>{emp.email}</TableData>\n                            <TableData>{emp.role}</TableData>\n                            <TableData>{emp.pan_No}</TableData>\n                            <TableData>{emp.account_No}</TableData>\n                \n                            <TableData>{emp.ifsc_code}</TableData>\n                            <TableData style={{ \"text-align\": \"center\" }} >\n                                <LinkTag to={`/editpersonal/${emp.id}`}>\n                                    <FontAwesomeIcon icon={faEdit} ></FontAwesomeIcon>\n                                </LinkTag>\n                            </TableData>\n                            <TableData style={{ \"text-align\": \"center\" }} >\n                                    <FontAwesomeIcon icon={faTrash}  onClick={() => handleDelete(emp.id)} ></FontAwesomeIcon>\n                            </TableData>\n\n                        </TableRow>\n                    ))\n                    }\n                </Table>\n            </Container>\n\n        </Fragment>\n\n    )\n}\n\n","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/PersonalDetails.js",["230","231","232","233","234","235","236","237","238"],"import React, { Component, Fragment, useState } from 'react'\n\nimport Styled from '@emotion/styled';\nimport { Link, useParams } from 'react-router-dom';\nimport { useMutation, gql, useQuery } from '@apollo/client';\n\n\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\nposition: sticky;\ntop:0px;\npadding:8px;\ncolor:${(props) => props.color};\nfont-size:25px;\n`;\nconst Logo = Styled.img`\nheight:20px;\nwidth:20px\n`;\nconst Lable = Styled.label`\nfont-size:20px;\n`;\nconst Input = Styled.input`\nborder:none;\nwidth:230px;\nmargin-left:5px;\nheight:20px;\n`;\nconst Break = Styled.br`\n`;\nconst SelectBox = Styled.select`\n&.Selectbox1{\nwidth: 230px;\nmargin-left:5px;\nborder-radius:5px;\nheight:25px;\n}\n`;\nconst Option = Styled.option`\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: ${props =>\n        props.save ? 'powderblue' : 'white'};\nheight:30px;\nfont-size:20px;\nwidth:80px;\nborder-radius:5px;\n&:hover {\nopacity:0.5;\n`;\nconst Container = Styled.form`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\npadding:20px;\n`;\nconst Table = Styled.table`\n`;\nconst TableData = Styled.td`\n`;\nconst TableRow = Styled.tr`\n`;\nconst TableColumn = Styled.td`\n`;\nconst LinkTag = Styled(Link)` \ncolor:black; \ntext-decoration:none;\n`;\n\nexport const Personal_Details = () => {\n    const { id } = useParams();\n    const [personState, setState] = useState({\n        name: \"\",\n        code: \"\",\n        email: \"\",\n        role: \" \",\n        pan_No: \"\",\n        account_No: \"\",\n        ifsc_code: \"\"\n    })\n\n\n    const DisplayPD = gql`\n    query PDDisplay($id:String!){\n        personal(id:$id){\n            name\n            code\n            email\n            role\n            pan_No\n            account_No\n            ifsc_code\n          }\n    }\n    `;\n\n    const { loading, error, data } = useQuery(DisplayPD, { variables: { id: id } });\n\n    if (loading) return <p>Loading....</p>\n    if (error) return <p>ERROR....</p>\n    if (data && data.personal) {\n        personState.name = data.personal.name;\n        personState.code = data.personal.code;\n        personState.email = data.personal.email;\n        personState.role = data.personal.role;\n        personState.pan_No = data.personal.pan_No;\n        personState.account_No = data.personal.account_No;\n        personState.ifsc_code = data.personal.ifsc_code;\n    }\n\n    return (\n        <Fragment>\n\n            <Navbar bgColor=\"grey\" color=\"white\">\n                Personal Details\n                        </Navbar>\n            <Break />\n            <Container >\n\n                <Table >\n\n                    <TableRow>\n\n                        <TableColumn ><Lable htmlFor=\"name\"> Name</Lable></TableColumn>\n                        <TableColumn >:<Input value={personState.name} readOnly /></TableColumn>\n\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Empl-Id\"> Employee Code </Lable></TableColumn>\n                        <TableColumn>:<Input value={personState.code} readOnly /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Email\"> Email </Lable></TableColumn>\n                        <TableColumn>:<Input value={personState.email} readOnly /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Role\"> Role</Lable></TableColumn>\n                        <TableColumn>:<Input value={personState.role} readOnly /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"PAN\"> PAN</Lable></TableColumn>\n                        <TableColumn>:<Input value={personState.pan_No} readOnly /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Account Number\"> Account Number</Lable></TableColumn>\n                        <TableColumn>:<Input value={personState.account_No} readOnly /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"IFSC\"> IFSC</Lable></TableColumn>\n                        <TableColumn>:<Input value={personState.ifsc_code} readOnly /></TableColumn>\n                    </TableRow>\n                </Table>\n\n            </Container>\n\n        </Fragment>\n    );\n}\n","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/LoginPage.js",[],"/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/HR_Page.js",["239","240","241","242","243","244","245"],"import { React, Fragment } from \"react\";\nimport Styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nimport { useQuery, gql, useMutation } from '@apollo/client';\nimport './images/mobile_black.png';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\ncolor: ${(props) => props.color};\nposition: sticky;\ntop: 0px;\nfont-size: 20px;\npadding: 8px;\ntext-align:${(props) => props.text};\n`;\nconst LinkTag = Styled(Link)`\ncolor:black;\ntext-decoration:none;\n`;\nconst Logo = Styled.img`\nheight: 30px;\nwidth: 30px;\nmargin-bottom:-5px;\n`;\nconst Table = Styled.table`\nborder-collapse: collapse;\nborder: 3px solid #ddd;\n`;\nconst TableData = Styled.td`\nborder: 3px solid #ddd;\nheight:30px;\nfont-size:20px;\nfont-weight:bold;\npadding:40px;\nvertical-align:bottom;\ntext-align:left;\n&:hover {background-color: grey;}\n`;\nconst TableRow = Styled.tr`\nborder: 3px solid #ddd;\n &:nth-child(even){background-color: #F2F2F2;}\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: ${props =>\n        props.save ? 'powderblue' : 'white'};\nheight:30px;\nfont-size:20px;\nwidth:80px;\nborder-radius:5px;\n&:hover {\nopacity:0.5;\n`;\nconst Hover = Styled.a`\na:link{\n    color: black; \n    text-decoration: none;\n  }\n`;\nexport const HR = () => {\n    return (\n\n        <Fragment>\n            <Navbar bgColor=\"grey\" color=\"white\" text=\"center\">\n                HR\n                    </Navbar>\n            <Table>\n                <TableRow>\n                    <TableRow><TableData>LEAVE MANAGEMENT</TableData></TableRow>\n                    <TableRow><TableData>\n                        <Hover href=\"https://drive.google.com/file/d/1O5XlrbfEO6ZlTeAw762bbXQYoI5Ck0aA/view?usp=sharing\">LEAVE POLICY</Hover>\n                    </TableData></TableRow>\n                    <TableRow><TableData>\n                        <LinkTag to={\"/personal\"}>\n                            PERSONAL DETAILS\n                        </LinkTag></TableData></TableRow>\n                    <TableRow><TableData>OFFER LETTER INCREMENT</TableData></TableRow>\n                    <TableRow ><TableData>DOCUMENTS</TableData></TableRow>\n                </TableRow>\n            </Table>\n        </Fragment>\n    )\n}\n","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/CreateEmployee.js",["246","247","248","249"],"import React, { Fragment, useState } from 'react'\nimport Styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nimport { useMutation, gql } from '@apollo/client';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\nposition: sticky;\ntop:0px;\npadding:8px;\ncolor:${(props) => props.color};\nfont-size:25px;\n`;\nconst Logo = Styled.img`\nheight:20px;\nwidth:20px\n`;\nconst Lable = Styled.label`\nfont-size:20px;\n`;\nconst Input = Styled.input`\nborder-radius:5px;\nwidth:230px;\nmargin-left:5px;\nheight:25px;\n`;\nconst Break = Styled.br`\n`;\nconst SelectBox = Styled.select`\n&.Selectbox1{\nwidth: 230px;\nmargin-left:5px;\nborder-radius:5px;\nheight:25px;\n}\n`;\nconst Option = Styled.option`\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: ${props =>\n       props.save ? 'powderblue' : 'white'};\nheight:30px;\nfont-size:20px;\nwidth:80px;\nborder-radius:5px;\n&:hover {\nopacity:0.5;\n`;\nconst Container = Styled.form`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\npadding:20px;\n`;\nconst Table = Styled.table`\n`;\nconst TableData = Styled.td`\n`;\nconst TableRow = Styled.tr`\n`;\nconst TableColumn = Styled.td`\n`;\nconst LinkTag = Styled(Link)` \ncolor:black; \ntext-decoration:none;\n`;\n\nexport const CreateEmployee = () => {\n\n    const [formData, createFormData] = useState({\n        username:\"\",\n        code: \"\",\n        email: \" \",\n        mobileNO: \"\",\n        department: \"\",\n        role: \"\",\n        joinDate: \"\"\n    });\n\n    const EmployeeList = gql`\n     mutation {\n         createEmployee(data: {\n              name:\"${formData.username}\",\n              code:\"${formData.code}\",\n              email:\"${formData.email}\",\n              mobileNo:\"${formData.mobileNO}\",\n              department:\"${formData.department}\",\n              role:\"${formData.role}\",\n             joinedDate:\"${formData.joinDate}\"   \n           })\n                  {\n                      respCode, respMessage\n                  }\n              }\n          `;\n    const [EmployeeCreate, { loading, error, data }] = useMutation(EmployeeList);\n    if (loading) return <p>Loading ...</p>;\n    if (error) return <p>Error</p>;\n\n    const handleChange = (e) => {\n        createFormData({\n            ...formData,\n            [e.target.name]: e.target.value.trim()\n        });\n    };\n    const handleSubmit = (e) => {\n        e.preventDefault()\n         EmployeeCreate();\n        showToast();\n    };\n\n    toast.configure()\n    const showToast = () => {\n    if (error)  { \n        toast.info('successful');\n    }\n};\n\n    return (\n\n        <Fragment>\n            <Navbar bgColor=\"grey\" color=\"white\">\n                Create an Employee\n                        </Navbar>\n            <Break />\n            <Container >\n                <Table >\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Name\"> Name: </Lable></TableColumn>\n                        <TableColumn ><Input type=\"text\" name=\"username\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Empl-Id\"> Employee Id: </Lable></TableColumn>\n                        <TableColumn><Input type=\"text\" name=\"code\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Email\"> Email: </Lable></TableColumn>\n                        <TableColumn><Input type=\"email\" name=\"email\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Mobile Number\"> Mobile Number: </Lable></TableColumn>\n                        <TableColumn><Input placeholder=\" +91 \" name=\"mobileNO\" onChange={handleChange} type=\"number\" required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Department\"> Department: </Lable></TableColumn>\n                        <TableColumn><SelectBox className=\"Selectbox1\" name=\"department\" onChange={handleChange} required>\n                            <Option disabled selected value> Select an Option</Option>\n                            <Option value=\"HR\"> HR </Option>\n                            <Option value=\"ADMIN\"> ADMIN </Option>\n                            <Option value=\"ACCOUNTING\"> ACCOUNTING </Option>\n                            <Option value=\"IT\"> IT </Option>\n                        </SelectBox></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Role\"> Role: </Lable></TableColumn>\n                        <TableColumn><SelectBox className=\"Selectbox1\" name=\"role\" onChange={handleChange} required>\n                            <Option disabled selected value> Select an Option</Option>\n                            <Option value=\"ADMIN\"> ADMIN </Option>\n                            <Option value=\"SUPER ADMIN\"> SUPER ADMIN </Option>\n                            <Option value=\"ACCOUNTANT\"> ACCOUNTANT </Option>\n                            <Option value=\"SOFTWARE ENGINEER\"> SOFTWARE ENGINEER </Option>\n                            <Option value=\"SENIOR-SOFTWARE ENGINEER\"> SENIOR-SOFTWARE ENGINEER </Option>\n                        </SelectBox></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Date-Containerat\" className=\"Selectbox1\"> Join Date: </Lable></TableColumn>\n                        <TableColumn><Input type=\"date\" placeholder=\"dd-mm-yyyy\" name=\"joinDate\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn >\n                            <Button type=\"Cancel\">\n                                <LinkTag to={\"/list\"}>Cancel</LinkTag>\n                            </Button>\n                        </TableColumn>\n\n                        <TableColumn>\n                            <Button onClick={handleSubmit}>\n                                <LinkTag to={\"/list\"}>Submit</LinkTag>\n                            </Button>\n                        </TableColumn>\n                    </TableRow>\n                </Table>\n\n            </Container>\n\n        </Fragment>\n    );\n}\n","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/EditEmployee.js",["250","251","252"],"import React, { Component, Fragment, useState } from 'react'\n\nimport Styled from '@emotion/styled';\nimport { Link, useParams } from 'react-router-dom';\nimport { useMutation, gql, useQuery } from '@apollo/client';\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\nposition: sticky;\ntop:0px;\npadding:8px;\ncolor:${(props) => props.color};\nfont-size:25px;\n`;\nconst Logo = Styled.img`\nheight:20px;\nwidth:20px\n`;\nconst Lable = Styled.label`\nfont-size:20px;\n`;\nconst Input = Styled.input`\nborder-radius:5px;\nwidth:230px;\nmargin-left:5px;\nheight:25px;\n`;\nconst Break = Styled.br`\n`;\nconst SelectBox = Styled.select`\n&.Selectbox1{\nwidth: 230px;\nmargin-left:5px;\nborder-radius:5px;\nheight:25px;\n}\n`;\nconst Option = Styled.option`\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: ${props =>\n        props.save ? 'powderblue' : 'white'};\nheight:30px;\nfont-size:20px;\nwidth:80px;\nborder-radius:5px;\n&:hover {\nopacity:0.5;\n`;\nconst Container = Styled.form`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\npadding:20px;\n`;\nconst Table = Styled.table`\n`;\nconst TableData = Styled.td`\n`;\nconst TableRow = Styled.tr`\n`;\nconst TableColumn = Styled.td`\n`;\nconst LinkTag = Styled(Link)` \ncolor:black; \ntext-decoration:none;\n`;\n\n\nexport const EditEmployee = () => {\n\n    const { id } = useParams();\n\n\n    const [empState, setState] = useState({\n        username: \"\",\n        code: \"\",\n        email: \" \",\n        mobileNo: \"\",\n        department: \"\",\n        role: \"\",\n        joinedDate: \"\"\n    })\n\n    const GetEmployeeById = gql`\n    query EmpDetails($id:String!){\n        employee(id:$id){\n            name\n            code\n            email\n            mobileNo\n            department\n            role\n            joinedDate\n        }\n    }\n    `;\n\n    const EmployeeEdit = gql`\n     mutation UpdateEmployee($id: String!){\n         updateEmployee(id:$id,data: {\n              name:\"${empState.username}\",\n              code:\"${empState.code}\",\n              email:\"${empState.email}\",\n              mobileNo:\"${empState.mobileNo}\",\n              department:\"${empState.department}\",\n              role:\"${empState.role}\",\n             joinedDate:\"${empState.joinedDate}\"   \n           })\n           {\n              respCode, respMessage\n                  }\n              }\n          `;\n    const { loading, error, data } = useQuery(GetEmployeeById, { variables: { id: id } });\n\n    const [EditMutation,] = useMutation(EmployeeEdit);\n    if (loading) return <p>Loading....</p>\n    if (error) return <p>ERROR....</p>\n\n    const handleChange = (e) => {\n        setState({\n            ...empState,\n            [e.target.name]: e.target.value.trim(),\n        });\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(empState);\n        EditMutation({ variables: { id: id } });\n\n    };\n\n    return (\n        <Fragment>\n\n            <Navbar bgColor=\"grey\" color=\"white\">\n                Edit an Employee\n                        </Navbar>\n            <Break />\n            <Container >\n\n                <Table >\n\n                    <TableRow>\n\n                        <TableColumn ><Lable htmlFor=\"Name\"> Name:</Lable></TableColumn>\n                        <TableColumn ><Input type=\"text\" name=\"username\" defaultValue={data.employee.name} onChange={handleChange} required /></TableColumn>\n\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Empl-Id\"> Employee Id: </Lable></TableColumn>\n                        <TableColumn><Input type=\"text\" name=\"code\" defaultValue={data.employee.code} onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Email\"> Email: </Lable></TableColumn>\n                        <TableColumn><Input type=\"email\" name=\"email\" defaultValue={data.employee.email} onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Mobile Number\"> Mobile Number: </Lable></TableColumn>\n                        <TableColumn><Input placeholder=\" +91 \" name=\"mobileNo\" defaultValue={data.employee.mobileNo} onChange={handleChange} type=\"number\" required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Department\"> Department: </Lable></TableColumn>\n                        <TableColumn><SelectBox className=\"Selectbox1\" name=\"department\" defaultValue={data.employee.department} onChange={handleChange} required>\n                            <Option disabled selected value> Select an Option</Option>\n                            <Option value=\"HR\"> HR </Option>\n                            <Option value=\"ADMIN\"> ADMIN </Option>\n                            <Option value=\"ACCOUNTING\"> ACCOUNTING </Option>\n                            <Option value=\"IT\"> IT </Option>\n                        </SelectBox></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Role\"> Role: </Lable></TableColumn>\n                        <TableColumn><SelectBox className=\"Selectbox1\" name=\"role\" defaultValue={data.employee.role} onChange={handleChange} required>\n                            <Option disabled selected value> Select an Option</Option>\n                            <Option value=\"ADMIN\"> ADMIN </Option>\n                            <Option value=\"SUPER ADMIN\"> SUPER ADMIN </Option>\n                            <Option value=\"ACCOUNTANT\"> ACCOUNTANT </Option>\n                            <Option value=\"SOFTWARE ENGINEER\"> SOFTWARE ENGINEER </Option>\n                            <Option value=\"SENIOR-SOFTWARE ENGINEER\"> SENIOR-SOFTWARE ENGINEER </Option>\n                        </SelectBox></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Date-Containerat\" className=\"Selectbox1\"> Join Date: </Lable></TableColumn>\n                        <TableColumn> <Input type=\"date\" placeholder=\"dd-mm-yyyy\" name=\"joinedDate\" defaultValue={data.employee.joinedDate} onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Button type=\"Cancel\">\n                            <LinkTag to={\"/list\"}>Cancel</LinkTag>\n                        </Button></TableColumn>\n\n\n                        <TableColumn><Button onClick={handleSubmit}>\n                            <LinkTag to={\"/list\"}>\n                                Submit\n                        </LinkTag>\n                        </Button></TableColumn>\n\n                    </TableRow>\n\n                </Table>\n\n            </Container>\n\n        </Fragment>\n    );\n}\n","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/EmployeeDetails.js",["253","254","255","256","257","258","259","260","261","262"],"import React, { Component, Fragment, useState } from 'react'\nimport Styled from '@emotion/styled';\nimport { Link, useParams } from 'react-router-dom';\nimport { useMutation, gql, useQuery } from '@apollo/client';\n\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\nposition: sticky;\ntop:0px;\npadding:8px;\ncolor:${(props) => props.color};\nfont-size:25px;\n`;\nconst Logo = Styled.img`\nheight:20px;\nwidth:20px\n`;\nconst Lable = Styled.label`\nfont-size:20px;\n`;\nconst Input = Styled.input`\nborder:none;\nwidth:230px;\nmargin-left:5px;\nheight:20px;\n`;\nconst Break = Styled.br`\n`;\nconst SelectBox = Styled.select`\n&.Selectbox1{\nwidth: 230px;\nmargin-left:5px;\nborder-radius:5px;\nheight:25px;\n}\n`;\nconst Option = Styled.option`\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: ${props =>\n        props.save ? 'powderblue' : 'white'};\nheight:30px;\nfont-size:20px;\nwidth:80px;\nborder-radius:5px;\n&:hover {\nopacity:0.5;\n`;\nconst Container = Styled.form`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\npadding:20px;\n`;\nconst Table = Styled.table`\n`;\nconst TableData = Styled.td`\n`;\nconst TableRow = Styled.tr`\n`;\nconst TableColumn = Styled.td`\n`;\nconst LinkTag = Styled(Link)` \ncolor:black; \ntext-decoration:none;\n`;\n\n\nexport const EmployeeDetails = () => {\n\n    const { id } = useParams();\n    const [empState, setState] = useState({\n        username: \"\",\n        code: \"\",\n        email: \" \",\n        mobileNo: \"\",\n        department: \"\",\n        role: \"\",\n        joinedDate: \"\"\n    })\n    const GetEmployeeById = gql`\n    query EmpDetails($id:String!){\n        employee(id:$id){\n            name\n            code\n            email\n            mobileNo\n            department\n            role\n            joinedDate\n        }\n    }\n    `;\n\n    const { loading, error, data } = useQuery(GetEmployeeById, { variables: { id: id } });\n\n    if (loading) return <p>Loading....</p>\n    if (error) return <p>ERROR....</p>\n    if (data && data.employee) {\n    empState.name = data.employee.name;\n    empState .code = data.employee.code;\n    empState.email = data.employee.email;\n    empState.mobileNo = data.employee.mobileNo;\n    empState.department = data.employee.department;\n    empState.role = data.employee.role;\n    empState.joinedDate = data.employee.joinedDate;\n    }\n\n\n\n    return (\n        <Fragment>\n\n            <Navbar bgColor=\"grey\" color=\"white\">\n                Employee Details\n                        </Navbar>\n            <Break />\n            <Container >\n\n                <Table >\n\n                    <TableRow>\n\n                        <TableColumn ><Lable htmlFor=\"Name\"> Name</Lable></TableColumn>\n                        <TableColumn >:<Input value={empState.name} readOnly/></TableColumn>\n\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Empl-Id\"> Employee Code </Lable></TableColumn>\n                        <TableColumn>:<Input  value={empState.code}  readOnly/></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Email\"> Email </Lable></TableColumn>\n                        <TableColumn>:<Input  value={empState.email}  readOnly/></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Mobile Number\"> Mobile Number </Lable></TableColumn>\n                        <TableColumn>:<Input value={empState.mobileNo}  readOnly/></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Department\"> Department</Lable></TableColumn>\n                        <TableColumn>:<Input value={empState.department} readOnly/>\n                        </TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Role\"> Role</Lable></TableColumn>\n                        <TableColumn>:<Input value={empState.role}  readOnly/>\n                        </TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Date-Containerat\" className=\"Selectbox1\"> Join Date</Lable></TableColumn>\n                        <TableColumn>:<Input value={empState.joinedDate} readOnly/></TableColumn>\n                    </TableRow>\n                    <Break />\n                   \n                </Table>\n\n            </Container>\n\n        </Fragment>\n    );\n}\n","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/CreatePersonalDetails.js",["263","264","265","266"],"import React, { Fragment, useState } from 'react'\nimport Styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nimport { useMutation, gql, useQuery } from '@apollo/client';\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\nposition: sticky;\ntop:0px;\npadding:8px;\ncolor:${(props) => props.color};\nfont-size:25px;\n`;\nconst Logo = Styled.img`\nheight:20px;\nwidth:20px\n`;\nconst Lable = Styled.label`\nfont-size:20px;\n`;\nconst Input = Styled.input`\nborder-radius:5px;\nwidth:230px;\nmargin-left:5px;\nheight:25px;\n`;\nconst Break = Styled.br`\n`;\nconst SelectBox = Styled.select`\n&.Selectbox1{\nwidth: 230px;\nmargin-left:5px;\nborder-radius:5px;\nheight:25px;\n}\n`;\nconst Option = Styled.option`\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: ${props =>\n       props.save ? 'powderblue' : 'white'};\nheight:30px;\nfont-size:20px;\nwidth:80px;\nborder-radius:5px;\n&:hover {\nopacity:0.5;\n`;\nconst Container = Styled.form`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\npadding:20px;\n`;\nconst Table = Styled.table`\n`;\nconst TableData = Styled.td`\n`;\nconst TableRow = Styled.tr`\n`;\nconst TableColumn = Styled.td`\n`;\nconst LinkTag = Styled(Link)` \ncolor:black; \ntext-decoration:none;\n`;\nexport const Create_PersonalDetails=()=>{\n\n    const [formData, createFormData] = useState({\n        name:\"\",\n        code: \"\",\n        email: \" \",\n       role: \"\",\n        pan: \"\",\n       account: \"\",\n        ifsc: \"\"\n    });\n\n    const Personal = gql`\n     mutation {\n        createPersonalDetails(data:{\n              name:\"${formData.name}\",\n              code:\"${formData.code}\",\n              email:\"${formData.email}\",\n              role:\"${formData.role}\",\n              pan_No:\"${formData.pan}\",\n              account_No:\"${formData.account}\",\n              ifsc_code:\"${formData.ifsc}\"   \n           })\n                  {\n                      respCode, respMessage\n                  }\n              }\n          `;\n    const [PDCreate, { loading, error, data }] = useMutation(Personal);\n    if (loading) return <p>Loading ...</p>;\n    if (error) return <p>Error</p>;\n\n    const handleChange = (e) => {\n        createFormData({\n            ...formData,\n            [e.target.name]: e.target.value.trim()\n        });\n    };\n    const handleSubmit = (e) => {\n        e.preventDefault()\n      PDCreate();\n    };\n   console.log(formData.name);\n    return(\n        <Fragment>\n            <Navbar bgColor=\"grey\" color=\"white\">\n                Add Personal Details\n                        </Navbar>\n            <Break />\n            <Container >\n                <Table >\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Name\"> Name: </Lable></TableColumn>\n                        <TableColumn ><Input type=\"text\" name=\"name\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Empl-Id\"> Employee Code: </Lable></TableColumn>\n                        <TableColumn><Input type=\"text\"  name=\"code\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Email\"> Email: </Lable></TableColumn>\n                        <TableColumn><Input type=\"email\"  name=\"email\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                   \n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Role\"> Role: </Lable></TableColumn>\n                        <TableColumn><SelectBox className=\"Selectbox1\" name=\"role\"  onChange={handleChange} required>\n                            <Option disabled selected value> Select an Option</Option>\n                            <Option value=\"ADMIN\"> ADMIN </Option>\n                            <Option value=\"SUPER ADMIN\"> SUPER ADMIN </Option>\n                            <Option value=\"ACCOUNTANT\"> ACCOUNTANT </Option>\n                            <Option value=\"SOFTWARE ENGINEER\"> SOFTWARE ENGINEER </Option>\n                            <Option value=\"SENIOR-SOFTWARE ENGINEER\"> SENIOR-SOFTWARE ENGINEER </Option>\n                        </SelectBox></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"PAN\"> PAN: </Lable></TableColumn>\n                        <TableColumn><Input  name=\"pan\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Account Number\" >Account Number: </Lable></TableColumn>\n                        <TableColumn><Input name=\"account\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"IFSC Code\">IFSC Code: </Lable></TableColumn>\n                        <TableColumn><Input  name=\"ifsc\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn >\n                            <Button type=\"Cancel\">\n                                <LinkTag to={\"/personal\"}>Cancel</LinkTag>\n                            </Button>\n                        </TableColumn>\n\n                        <TableColumn>\n                            <Button onClick={handleSubmit}>\n                                <LinkTag to={\"/personal\"}>Submit</LinkTag>\n                            </Button>\n                        </TableColumn>\n                    </TableRow>\n                </Table>\n\n            </Container>\n\n        </Fragment>\n    )\n}","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/EditPersonalDetails.js",["267","268","269"],"import React, { Component, Fragment, useState } from 'react'\nimport Styled from '@emotion/styled';\nimport { Link, useParams } from 'react-router-dom';\nimport { useMutation, gql, useQuery } from '@apollo/client';\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\nposition: sticky;\ntop:0px;\npadding:8px;\ncolor:${(props) => props.color};\nfont-size:25px;\n`;\nconst Logo = Styled.img`\nheight:20px;\nwidth:20px\n`;\nconst Lable = Styled.label`\nfont-size:20px;\n`;\nconst Input = Styled.input`\nborder-radius:5px;\nwidth:230px;\nmargin-left:5px;\nheight:25px;\n`;\nconst Break = Styled.br`\n`;\nconst SelectBox = Styled.select`\n&.Selectbox1{\nwidth: 230px;\nmargin-left:5px;\nborder-radius:5px;\nheight:25px;\n}\n`;\nconst Option = Styled.option`\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: ${props =>\n        props.save ? 'powderblue' : 'white'};\nheight:30px;\nfont-size:20px;\nwidth:80px;\nborder-radius:5px;\n&:hover {\nopacity:0.5;\n`;\nconst Container = Styled.form`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\npadding:20px;\n`;\nconst Table = Styled.table`\n`;\nconst TableData = Styled.td`\n`;\nconst TableRow = Styled.tr`\n`;\nconst TableColumn = Styled.td`\n`;\nconst LinkTag = Styled(Link)` \ncolor:black; \ntext-decoration:none;\n`;\n\n\nexport const EditPersonalDetails = () => {\n\n    const { id } = useParams();\n\n\n    const [empState, setState] = useState({\n        username: \"\",\n        code: \"\",\n        email: \"\",\n        role: \" \",\n        pan_No: \"\",\n        account_No: \"\",\n        ifsc_code: \"\"\n    })\n\n    const DisplayPD = gql`\n    query PDDisplay($id:String!){\n        personal(id:$id){\n            name\n            code\n            email\n            role\n            pan_No\n            account_No\n            ifsc_code\n          }\n    }\n    `;\n\n    const EditPd = gql`\n     mutation UpdatePersonalDetail($id: String!){\n        updatepersonalDetail(id:$id,data: {\n              name:\"${empState.username}\",\n              code:\"${empState.code}\",\n              email:\"${empState.email}\",\n              role:\"${empState.role}\",\n              pan_No:\"${empState.pan_No}\",\n              account_No:\"${empState.account_No}\",\n              ifsc_code:\"${empState.ifsc_code}\",\n           })\n           {\n              respCode, respMessage\n                  }\n              }\n          `;\n    const { loading, error, data } = useQuery(DisplayPD, { variables: { id: id } });\n\n    const [EditMutation] = useMutation(EditPd);\n    if (loading) return <p>Loading....</p>\n    if (error) return <p>ERROR....</p>\n\n\n    const handleChange = (e) => {\n        setState({\n            ...empState,\n            [e.target.name]: e.target.value.trim(),\n        });\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(empState);\n        EditMutation({ variables: { id: id } });\n\n    };\n\n    return (\n        <Fragment>\n\n            <Navbar bgColor=\"grey\" color=\"white\">\n                Edit Personal Details\n                        </Navbar>\n            <Break />\n            <Container >\n\n                <Table >\n\n                    <TableRow>\n\n                        <TableColumn ><Lable htmlFor=\"Name\"> Name:</Lable></TableColumn>\n                        <TableColumn ><Input type=\"text\" name=\"username\" defaultValue={data.personal.name} onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Empl-Id\"> Employee Id: </Lable></TableColumn>\n                        <TableColumn><Input type=\"text\" name=\"code\" defaultValue={data.personal.code} onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Email\"> Email: </Lable></TableColumn>\n                        <TableColumn><Input type=\"email\" name=\"email\" defaultValue={data.personal.email} onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Role\"> Role: </Lable></TableColumn>\n                        <TableColumn><SelectBox className=\"Selectbox1\" name=\"role\" defaultValue={data.personal.role} onChange={handleChange} required>\n                            <Option disabled selected value> Select an Option</Option>\n                            <Option value=\"ADMIN\"> ADMIN </Option>\n                            <Option value=\"SUPER ADMIN\"> SUPER ADMIN </Option>\n                            <Option value=\"ACCOUNTANT\"> ACCOUNTANT </Option>\n                            <Option value=\"SOFTWARE ENGINEER\"> SOFTWARE ENGINEER </Option>\n                            <Option value=\"SENIOR-SOFTWARE ENGINEER\"> SENIOR-SOFTWARE ENGINEER </Option>\n                        </SelectBox></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"PAN\"> PAN: </Lable></TableColumn>\n                        <TableColumn><Input name=\"pan_No\" defaultValue={data.personal.pan_No} onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"AccountNumber\">Account Number: </Lable></TableColumn>\n                        <TableColumn><Input name=\"account_No\" defaultValue={data.personal.account_No} onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"IFSC\">IFSC: </Lable></TableColumn>\n                        <TableColumn><Input name=\"ifsc_code\" defaultValue={data.personal.ifsc_code} onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n\n                    <TableRow>\n                        <TableColumn ><Button type=\"Cancel\">\n                            <LinkTag to={\"/personal\"}>Cancel</LinkTag>\n                        </Button></TableColumn>\n\n\n                        <TableColumn><Button onClick={handleSubmit}>\n                            <LinkTag to={\"/personal\"}>\n                                Submit\n                        </LinkTag>\n                        </Button></TableColumn>\n\n                    </TableRow>\n\n                </Table>\n\n            </Container>\n\n        </Fragment>\n    );\n}\n",["270","271"],"/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/Accounting.js",["272","273","274"],"import { React, Fragment, useState } from \"react\";\nimport Styled from '@emotion/styled';\nimport { Link, useParams } from 'react-router-dom';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faEdit, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { useQuery, gql, useMutation } from '@apollo/client';\n\n\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\nposition: sticky;\ntop: 0px;\npadding: 8px;\ncolor: ${(props) => props.color};\nfont-size: 20px;\n`;\nconst Logo = Styled.img`\nheight: 30px;\nwidth: 30px;\nmargin-bottom: -5px;\n`;\nconst Break = Styled.br`\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: powderblue;\nheight:27px;\nmargin-top: -3px;\nfont-size: 13px;\noutline: none;\nborder: none;\nwidth: 100px;\nfloat: right;\nborder-radius: 5px;\n&:hover {\nopacity: 0.5;\n`;\nconst Container = Styled.form`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\npadding: 8px;\n`;\nconst Table = Styled.table`\nborder-collapse: collapse;\nborder: 1px solid #ddd;\nwidth: 100%;\npadding: 20px;\n`;\nconst TableRow = Styled.tr`\nborder: 1px solid #ddd;\n&:nth-child(even){background-color: #F2F2F2;}\n&:hover {background-color: #ddd;}\n`;\nconst TableData = Styled.td`\nborder: 1px solid #ddd;\nheight: 30px;\nvertical-align: bottom;\n// text-align:left;\n`;\nconst TableHeading = Styled.th`\nborder: 1px solid #ddd;\nheight: 10px;\npadding:8px;\ntext-align:left;\n`;\nconst LinkTag = Styled(Link)`\ncolor:black;\ntext-decoration:none;\n`;\nconst Hover = Styled.a`\n&:hover {\n    color:blue;\n`;\nexport const SystemDetails = () => {\n    const { id } = useParams();\n    const [empId, setEmpId] = useState({ 'idToDelete': \"\" });\n    const ShowSD = gql`\n   query{ \n    systemdetailsList{\n        id\n        name\n        code\n        device\n        config\n        slno_scode_regno\n        devicehistory\n    }\n }`;\n    const DELETE_SD = gql`\n mutation DeleteSD($id: String!){\n    deleteSystemDetails(id: $id){\n respCode,\n respMessage \n}\n}\n`;\n\n    const { loading, error, data } = useQuery(ShowSD);\n    const [deleteMutation] = useMutation(DELETE_SD);\n    const handleDelete = (deleteId) => {\n        if (window.confirm(\"Are you sure?\")) {\n            setEmpId({ 'idToDelete': deleteId });\n            console.log(\"handleDelte\", deleteId, empId);\n            deleteMutation({ variables: { id: deleteId } });\n\n        }\n        else {\n\n        }\n    };\n\n\n    console.log(data);\n    if (loading) return <p>loading</p>;\n    if (error) return <p>Error</p>;\n\n    return (\n        <Fragment>\n            <Navbar bgColor=\"grey\" color=\"white\">System Details\n<Button >\n                    <LinkTag to={\"/createsystem\"}>\n                        <FontAwesomeIcon icon={faPlus}></FontAwesomeIcon>    ADD\n                        </LinkTag>\n                </Button>\n            </Navbar>\n            <Break />\n            <Container>\n                <Table>\n                    <TableRow>\n                        <TableHeading>ID</TableHeading>\n                        <TableHeading>Name</TableHeading>\n                        <TableHeading>Device</TableHeading>\n                        <TableHeading>Config</TableHeading>\n                        <TableHeading>SL.No/S.Code/Reg.No</TableHeading>\n                        <TableHeading>DeviceHistory</TableHeading>\n                        <TableHeading>Edit</TableHeading>\n                        <TableHeading>Delete</TableHeading>\n                    </TableRow>\n                    {data.systemdetailsList.map((sys, id) => (\n                        <TableRow>\n                            <a href=\"\">\n                                <LinkTag to={`/sd/${sys.id}`}>\n                                    <Hover>\n                                        <TableData key={id}>{sys.code}</TableData>\n                                    </Hover>\n                                </LinkTag>\n                            </a>\n                            <TableData>{sys.name}</TableData>\n                            <TableData>{sys.device}</TableData>\n                            <TableData>{sys.config}</TableData>\n                            <TableData>{sys.slno_scode_regno}</TableData>\n                            <TableData>{sys.devicehistory}</TableData>\n                            <TableData style={{ \"text-align\": \"center\" }} >\n                                <LinkTag to={`/editsystem/${sys.id}`}>\n                                    <FontAwesomeIcon icon={faEdit} ></FontAwesomeIcon>\n                                </LinkTag>\n                            </TableData>\n                            <TableData style={{ \"text-align\": \"center\" }} >\n                                <FontAwesomeIcon icon={faTrash} onClick={() => handleDelete(sys.id)}></FontAwesomeIcon>\n                            </TableData>\n\n                        </TableRow>\n                    ))\n                    }\n                </Table>\n            </Container>\n\n        </Fragment>\n\n    )\n}","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/SystemDetails.js",["275","276","277","278","279","280","281","282","283"],"import React, { Component, Fragment, useState } from 'react'\n\nimport Styled from '@emotion/styled';\nimport { Link, useParams } from 'react-router-dom';\nimport { useMutation, gql, useQuery } from '@apollo/client';\n\n\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\nposition: sticky;\ntop:0px;\npadding:8px;\ncolor:${(props) => props.color};\nfont-size:25px;\n`;\nconst Logo = Styled.img`\nheight:20px;\nwidth:20px\n`;\nconst Lable = Styled.label`\nfont-size:20px;\n`;\nconst Input = Styled.input`\nborder:none;\nwidth:230px;\nmargin-left:5px;\nheight:20px;\n`;\nconst Break = Styled.br`\n`;\nconst SelectBox = Styled.select`\n&.Selectbox1{\nwidth: 230px;\nmargin-left:5px;\nborder-radius:5px;\nheight:25px;\n}\n`;\nconst Option = Styled.option`\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: ${props =>\n        props.save ? 'powderblue' : 'white'};\nheight:30px;\nfont-size:20px;\nwidth:80px;\nborder-radius:5px;\n&:hover {\nopacity:0.5;\n`;\nconst Container = Styled.form`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\npadding:20px;\n`;\nconst Table = Styled.table`\n`;\nconst TableData = Styled.td`\n`;\nconst TableRow = Styled.tr`\n`;\nconst TableColumn = Styled.td`\n`;\nconst LinkTag = Styled(Link)` \ncolor:black; \ntext-decoration:none;\n`;\n\nexport const System_Details = () => {\n    const { id } = useParams();\n    const [systemState, setState] = useState({\n        name: \"\",\n        code: \"\",\n        device: \"\",\n        config: \" \",\n        slno_scode_regno: \"\",\n        devicehistory: \"\",\n    })\n\n\n    const DisplaySD = gql`\n    query SystemSD($id:String!){\n        system(id:$id){\n            name\n            code\n            device\n            config\n            slno_scode_regno\n            devicehistory\n          }\n    }\n    `;\n    const { loading, error, data } = useQuery(DisplaySD, { variables: { id: id } });\n\n    if (loading) return <p>Loading....</p>\n    if (error) return <p>ERROR....</p>\n    if (data && data.system) {\n        systemState.name = data.system.name;\n        systemState.code = data.system.code;\n        systemState.device = data.system.device;\n        systemState.config = data.system.config;\n        systemState.slno_scode_regno = data.system.slno_scode_regno;\n        systemState.devicehistory = data.system.devicehistory;\n    }\n\n    return (\n        <Fragment>\n\n            <Navbar bgColor=\"grey\" color=\"white\">\n                System Details\n                        </Navbar>\n            <Break />\n            <Container >\n\n                <Table >\n\n                    <TableRow>\n\n                        <TableColumn ><Lable htmlFor=\"name\"> Name</Lable></TableColumn>\n                        <TableColumn >:<Input value={systemState.name} readOnly /></TableColumn>\n\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Empl-Id\"> Employee Code </Lable></TableColumn>\n                        <TableColumn>:<Input value={systemState.code} readOnly /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Device\"> Device </Lable></TableColumn>\n                        <TableColumn>:<Input value={systemState.device} readOnly /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Config\"> Config</Lable></TableColumn>\n                        <TableColumn>:<Input value={systemState.config} readOnly /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"SL.No/S.Code/Reg.No\"> SL.No/S.Code/Reg.No</Lable></TableColumn>\n                        <TableColumn>:<Input value={systemState.slno_scode_regno} readOnly /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Device History\"> Device History</Lable></TableColumn>\n                        <TableColumn>:<Input value={systemState.devicehistory} readOnly /></TableColumn>\n                    </TableRow>\n                    <Break />\n\n                </Table>\n            </Container>\n\n        </Fragment>\n    );\n}\n","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/CreateSystemDetails.js",["284","285","286","287","288","289","290","291","292","293","294"],"import React, { Fragment, useState } from 'react'\nimport Styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nimport { useMutation, gql } from '@apollo/client';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\nposition: sticky;\ntop:0px;\npadding:8px;\ncolor:${(props) => props.color};\nfont-size:25px;\n`;\nconst Logo = Styled.img`\nheight:20px;\nwidth:20px\n`;\nconst Lable = Styled.label`\nfont-size:20px;\n`;\nconst Input = Styled.input`\nborder-radius:5px;\nwidth:230px;\nmargin-left:5px;\nheight:25px;\n`;\nconst Break = Styled.br`\n`;\nconst SelectBox = Styled.select`\n&.Selectbox1{\nwidth: 230px;\nmargin-left:5px;\nborder-radius:5px;\nheight:25px;\n}\n`;\nconst Option = Styled.option`\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: ${props =>\n       props.save ? 'powderblue' : 'white'};\nheight:30px;\nfont-size:20px;\nwidth:80px;\nborder-radius:5px;\n&:hover {\nopacity:0.5;\n`;\nconst Container = Styled.form`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\npadding:20px;\n`;\nconst Table = Styled.table`\n`;\nconst TableData = Styled.td`\n`;\nconst TableRow = Styled.tr`\n`;\nconst TableColumn = Styled.td`\n`;\nconst LinkTag = Styled(Link)` \ncolor:black; \ntext-decoration:none;\n`;\n\nexport const CreateSystem = () => {\n\n    const [formData, createFormData] = useState({\n        name: \"\",\n        code: \"\",\n        device: \"\",\n        config: \" \",\n        slno_scode_regno: \"\",\n        devicehistory: \"\",\n    });\n\n    const System = gql`\n     mutation {\n        createSystemDetails(data: {\n              name:\"${formData.username}\",\n              code:\"${formData.code}\",\n              device:\"${formData.device}\",\n              config:\"${formData.config}\",\n              slno_scode_regno:\"${formData.slno_scode_regno}\",\n              devicehistory:\"${formData.devicehistory}\", \n           })\n                  {\n                      respCode, respMessage\n                  }\n              }\n          `;\n    const [SystemCreate, { loading, error, data }] = useMutation(System);\n    if (loading) return <p>Loading ...</p>;\n    if (error) return <p>Error</p>;\n\n    const handleChange = (e) => {\n        createFormData({\n            ...formData,\n            [e.target.name]: e.target.value.trim()\n        });\n    };\n    const handleSubmit = (e) => {\n        e.preventDefault()\n         SystemCreate();\n        showToast();\n    };\n\n    toast.configure()\n    const showToast = () => {\n    if (error)  { \n        toast.info('successful');\n    }\n};\n\n    return (\n\n        <Fragment>\n            <Navbar bgColor=\"grey\" color=\"white\">\n                Create an Employee\n                        </Navbar>\n            <Break />\n            <Container >\n                <Table >\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Name\"> Name: </Lable></TableColumn>\n                        <TableColumn ><Input type=\"text\" name=\"username\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Empl-Id\"> Employee Id: </Lable></TableColumn>\n                        <TableColumn><Input type=\"text\" name=\"code\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Device\"> Device: </Lable></TableColumn>\n                        <TableColumn><Input type=\"text\" name=\"device\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Config\"> Config: </Lable></TableColumn>\n                        <TableColumn><Input  name=\"config\" onChange={handleChange} type=\"text\" required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Sl.No/S.Code/Reg.No\">Sl.No/S.Code/Reg.No: </Lable></TableColumn>\n                        <TableColumn><Input type=\"text\"  name=\"slno_scode_regno\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Device History\">Device History: </Lable></TableColumn>\n                        <TableColumn><Input  name=\"devicehistory\" onChange={handleChange} type=\"text\" required /></TableColumn>\n                    </TableRow>\n                    <TableRow>\n                        <TableColumn >\n                            <Button type=\"Cancel\">\n                                <LinkTag to={\"/SystemDetails\"}>Cancel</LinkTag>\n                            </Button>\n                        </TableColumn>\n\n                        <TableColumn>\n                            <Button onClick={handleSubmit}>\n                                <LinkTag to={\"/SystemDetails\"}>Submit</LinkTag>\n                            </Button>\n                        </TableColumn>\n                    </TableRow>\n                </Table>\n\n            </Container>\n\n        </Fragment>\n    );\n}\n","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/EditSystemDetails.js",["295","296","297","298","299"],"import React, { Component, Fragment, useState } from 'react'\n\nimport Styled from '@emotion/styled';\nimport { Link, useParams } from 'react-router-dom';\nimport { useMutation, gql, useQuery } from '@apollo/client';\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\nposition: sticky;\ntop:0px;\npadding:8px;\ncolor:${(props) => props.color};\nfont-size:25px;\n`;\nconst Logo = Styled.img`\nheight:20px;\nwidth:20px\n`;\nconst Lable = Styled.label`\nfont-size:20px;\n`;\nconst Input = Styled.input`\nborder-radius:5px;\nwidth:230px;\nmargin-left:5px;\nheight:25px;\n`;\nconst Break = Styled.br`\n`;\nconst SelectBox = Styled.select`\n&.Selectbox1{\nwidth: 230px;\nmargin-left:5px;\nborder-radius:5px;\nheight:25px;\n}\n`;\nconst Option = Styled.option`\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: ${props =>\n        props.save ? 'powderblue' : 'white'};\nheight:30px;\nfont-size:20px;\nwidth:80px;\nborder-radius:5px;\n&:hover {\nopacity:0.5;\n`;\nconst Container = Styled.form`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\npadding:20px;\n`;\nconst Table = Styled.table`\n`;\nconst TableData = Styled.td`\n`;\nconst TableRow = Styled.tr`\n`;\nconst TableColumn = Styled.td`\n`;\nconst LinkTag = Styled(Link)` \ncolor:black; \ntext-decoration:none;\n`;\n\n\nexport const EditSystem = () => {\n\n    const { id } = useParams();\n\n\n    const [empState, setState] = useState({\n        username: \"\",\n        code: \"\",\n        device: \"\",\n        config: \" \",\n        slno_scode_regno: \"\",\n        devicehistory: \"\",\n    })\n\n    const DisplaySD = gql`\n    query SystemSD($id:String!){\n        system(id:$id){\n            name\n            code\n            device\n            config\n            slno_scode_regno\n            devicehistory\n          }\n    }\n    `;\n    const SystemEdit = gql`\n     mutation UpdatSystemDetails($id: String!){\n        updateSystemDetail(id:$id,data: {\n              name:\"${empState.username}\",\n              code:\"${empState.code}\",\n              device:\"${empState.device}\",\n              config:\"${empState.config}\",\n              slno_scode_regno:\"${empState.slno_scode_regno}\",\n              devicehistory:\"${empState.devicehistory}\",  \n           })\n           {\n              respCode, respMessage\n                  }\n              }\n          `;\n    const { loading, error, data } = useQuery(DisplaySD, { variables: { id: id } });\n\n    const [EditMutation] = useMutation(SystemEdit);\n    if (loading) return <p>Loading....</p>\n    if (error) return <p>ERROR....</p>\n\n    const handleChange = (e) => {\n        setState({\n            ...empState,\n            [e.target.name]: e.target.value.trim(),\n        });\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(empState);\n        EditMutation({ variables: { id: id } });\n\n    };\n\n    return (\n        <Fragment>\n\n            <Navbar bgColor=\"grey\" color=\"white\">\n                Edit Details\n                        </Navbar>\n            <Break />\n            <Container >\n\n                <Table >\n\n                    <TableRow>\n\n                        <TableColumn ><Lable htmlFor=\"Name\"> Name:</Lable></TableColumn>\n                        <TableColumn ><Input type=\"text\" name=\"username\" defaultValue={data.system.name} onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Empl-Id\"> Employee Id: </Lable></TableColumn>\n                        <TableColumn><Input type=\"text\" name=\"code\" defaultValue={data.system.code} onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Device\"> Device: </Lable></TableColumn>\n                        <TableColumn><Input type=\"text\" name=\"device\" defaultValue={data.system.device} onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Config\"> Config: </Lable></TableColumn>\n                        <TableColumn><Input  name=\"config\" defaultValue={data.system.config} onChange={handleChange} type=\"text\" required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Sl.No/S.Code/Reg.No\">Sl.No/S.Code/Reg.No: </Lable></TableColumn>\n                        <TableColumn> <Input type=\"text\" name=\"slno_scode_regno\" defaultValue={data.system.slno_scode_regno} onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                         <TableColumn ><Lable htmlFor=\"Device History\"> Device History:</Lable></TableColumn>\n                         <TableColumn ><Input type=\"text\" name=\"devicehistory\" defaultValue={data.system.devicehistory} onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Button type=\"Cancel\">\n                            <LinkTag to={\"/SystemDetails\"}>Cancel</LinkTag>\n                        </Button></TableColumn>\n                       \n                       \n                        <TableColumn><Button onClick={handleSubmit}>\n                            <LinkTag to={\"/SystemDetails\"}>\n                                Submit\n                        </LinkTag>\n                        </Button></TableColumn>\n\n                    </TableRow>\n\n                </Table>\n\n            </Container>\n\n        </Fragment>\n    );\n}\n",{"ruleId":"300","severity":1,"message":"301","line":16,"column":10,"nodeType":"302","messageId":"303","endLine":16,"endColumn":14},{"ruleId":"300","severity":1,"message":"304","line":1,"column":17,"nodeType":"302","messageId":"303","endLine":1,"endColumn":26},{"ruleId":"300","severity":1,"message":"305","line":3,"column":27,"nodeType":"302","messageId":"303","endLine":3,"endColumn":37},{"ruleId":"300","severity":1,"message":"306","line":6,"column":27,"nodeType":"302","messageId":"303","endLine":6,"endColumn":35},{"ruleId":"300","severity":1,"message":"307","line":16,"column":7,"nodeType":"302","messageId":"303","endLine":16,"endColumn":11},{"ruleId":"300","severity":1,"message":"308","line":66,"column":7,"nodeType":"302","messageId":"303","endLine":66,"endColumn":19},{"ruleId":"300","severity":1,"message":"309","line":73,"column":7,"nodeType":"302","messageId":"303","endLine":73,"endColumn":15},{"ruleId":"300","severity":1,"message":"310","line":96,"column":13,"nodeType":"302","messageId":"303","endLine":96,"endColumn":15},{"ruleId":"311","severity":1,"message":"312","line":168,"column":29,"nodeType":"313","endLine":168,"endColumn":40},{"ruleId":"300","severity":1,"message":"304","line":1,"column":17,"nodeType":"302","messageId":"303","endLine":1,"endColumn":26},{"ruleId":"300","severity":1,"message":"314","line":4,"column":10,"nodeType":"302","messageId":"303","endLine":4,"endColumn":18},{"ruleId":"300","severity":1,"message":"315","line":4,"column":20,"nodeType":"302","messageId":"303","endLine":4,"endColumn":23},{"ruleId":"300","severity":1,"message":"316","line":4,"column":25,"nodeType":"302","messageId":"303","endLine":4,"endColumn":36},{"ruleId":"300","severity":1,"message":"317","line":6,"column":10,"nodeType":"302","messageId":"303","endLine":6,"endColumn":24},{"ruleId":"300","severity":1,"message":"318","line":6,"column":26,"nodeType":"302","messageId":"303","endLine":6,"endColumn":31},{"ruleId":"300","severity":1,"message":"307","line":22,"column":7,"nodeType":"302","messageId":"303","endLine":22,"endColumn":11},{"ruleId":"300","severity":1,"message":"319","line":45,"column":7,"nodeType":"302","messageId":"303","endLine":45,"endColumn":13},{"ruleId":"300","severity":1,"message":"317","line":5,"column":10,"nodeType":"302","messageId":"303","endLine":5,"endColumn":24},{"ruleId":"300","severity":1,"message":"307","line":16,"column":7,"nodeType":"302","messageId":"303","endLine":16,"endColumn":11},{"ruleId":"300","severity":1,"message":"320","line":60,"column":7,"nodeType":"302","messageId":"303","endLine":60,"endColumn":16},{"ruleId":"300","severity":1,"message":"321","line":99,"column":46,"nodeType":"302","messageId":"303","endLine":99,"endColumn":50},{"ruleId":"300","severity":1,"message":"314","line":4,"column":28,"nodeType":"302","messageId":"303","endLine":4,"endColumn":36},{"ruleId":"300","severity":1,"message":"307","line":13,"column":7,"nodeType":"302","messageId":"303","endLine":13,"endColumn":11},{"ruleId":"300","severity":1,"message":"320","line":57,"column":7,"nodeType":"302","messageId":"303","endLine":57,"endColumn":16},{"ruleId":"300","severity":1,"message":"321","line":95,"column":40,"nodeType":"302","messageId":"303","endLine":95,"endColumn":44},{"ruleId":"300","severity":1,"message":"304","line":1,"column":17,"nodeType":"302","messageId":"303","endLine":1,"endColumn":26},{"ruleId":"300","severity":1,"message":"307","line":14,"column":7,"nodeType":"302","messageId":"303","endLine":14,"endColumn":11},{"ruleId":"300","severity":1,"message":"320","line":58,"column":7,"nodeType":"302","messageId":"303","endLine":58,"endColumn":16},{"ruleId":"300","severity":1,"message":"304","line":1,"column":17,"nodeType":"302","messageId":"303","endLine":1,"endColumn":26},{"ruleId":"300","severity":1,"message":"316","line":4,"column":10,"nodeType":"302","messageId":"303","endLine":4,"endColumn":21},{"ruleId":"300","severity":1,"message":"307","line":14,"column":7,"nodeType":"302","messageId":"303","endLine":14,"endColumn":11},{"ruleId":"300","severity":1,"message":"322","line":29,"column":7,"nodeType":"302","messageId":"303","endLine":29,"endColumn":16},{"ruleId":"300","severity":1,"message":"323","line":37,"column":7,"nodeType":"302","messageId":"303","endLine":37,"endColumn":13},{"ruleId":"300","severity":1,"message":"319","line":39,"column":7,"nodeType":"302","messageId":"303","endLine":39,"endColumn":13},{"ruleId":"300","severity":1,"message":"320","line":58,"column":7,"nodeType":"302","messageId":"303","endLine":58,"endColumn":16},{"ruleId":"300","severity":1,"message":"324","line":64,"column":7,"nodeType":"302","messageId":"303","endLine":64,"endColumn":14},{"ruleId":"300","severity":1,"message":"325","line":73,"column":22,"nodeType":"302","messageId":"303","endLine":73,"endColumn":30},{"ruleId":"326","severity":1,"message":"327","line":102,"column":5,"nodeType":"328","messageId":"329","endLine":102,"endColumn":19,"fix":"330"},{"ruleId":"300","severity":1,"message":"314","line":4,"column":10,"nodeType":"302","messageId":"303","endLine":4,"endColumn":18},{"ruleId":"300","severity":1,"message":"315","line":4,"column":20,"nodeType":"302","messageId":"303","endLine":4,"endColumn":23},{"ruleId":"300","severity":1,"message":"316","line":4,"column":25,"nodeType":"302","messageId":"303","endLine":4,"endColumn":36},{"ruleId":"300","severity":1,"message":"317","line":6,"column":10,"nodeType":"302","messageId":"303","endLine":6,"endColumn":24},{"ruleId":"300","severity":1,"message":"318","line":6,"column":26,"nodeType":"302","messageId":"303","endLine":6,"endColumn":31},{"ruleId":"300","severity":1,"message":"307","line":22,"column":7,"nodeType":"302","messageId":"303","endLine":22,"endColumn":11},{"ruleId":"300","severity":1,"message":"319","line":45,"column":7,"nodeType":"302","messageId":"303","endLine":45,"endColumn":13},{"ruleId":"300","severity":1,"message":"307","line":17,"column":7,"nodeType":"302","messageId":"303","endLine":17,"endColumn":11},{"ruleId":"300","severity":1,"message":"310","line":76,"column":13,"nodeType":"302","messageId":"303","endLine":76,"endColumn":15},{"ruleId":"311","severity":1,"message":"312","line":143,"column":29,"nodeType":"313","endLine":143,"endColumn":40},{"ruleId":"300","severity":1,"message":"304","line":1,"column":17,"nodeType":"302","messageId":"303","endLine":1,"endColumn":26},{"ruleId":"300","severity":1,"message":"316","line":5,"column":10,"nodeType":"302","messageId":"303","endLine":5,"endColumn":21},{"ruleId":"300","severity":1,"message":"307","line":16,"column":7,"nodeType":"302","messageId":"303","endLine":16,"endColumn":11},{"ruleId":"300","severity":1,"message":"322","line":31,"column":7,"nodeType":"302","messageId":"303","endLine":31,"endColumn":16},{"ruleId":"300","severity":1,"message":"323","line":39,"column":7,"nodeType":"302","messageId":"303","endLine":39,"endColumn":13},{"ruleId":"300","severity":1,"message":"319","line":41,"column":7,"nodeType":"302","messageId":"303","endLine":41,"endColumn":13},{"ruleId":"300","severity":1,"message":"320","line":60,"column":7,"nodeType":"302","messageId":"303","endLine":60,"endColumn":16},{"ruleId":"300","severity":1,"message":"324","line":66,"column":7,"nodeType":"302","messageId":"303","endLine":66,"endColumn":14},{"ruleId":"300","severity":1,"message":"325","line":73,"column":25,"nodeType":"302","messageId":"303","endLine":73,"endColumn":33},{"ruleId":"300","severity":1,"message":"304","line":1,"column":17,"nodeType":"302","messageId":"303","endLine":1,"endColumn":26},{"ruleId":"300","severity":1,"message":"307","line":13,"column":7,"nodeType":"302","messageId":"303","endLine":13,"endColumn":11},{"ruleId":"300","severity":1,"message":"320","line":57,"column":7,"nodeType":"302","messageId":"303","endLine":57,"endColumn":16},{"ruleId":"331","replacedBy":"332"},{"ruleId":"333","replacedBy":"334"},{"ruleId":"300","severity":1,"message":"301","line":21,"column":10,"nodeType":"302","messageId":"303","endLine":21,"endColumn":14},{"ruleId":"300","severity":1,"message":"304","line":1,"column":17,"nodeType":"302","messageId":"303","endLine":1,"endColumn":26},{"ruleId":"300","severity":1,"message":"305","line":3,"column":27,"nodeType":"302","messageId":"303","endLine":3,"endColumn":37},{"ruleId":"300","severity":1,"message":"306","line":6,"column":27,"nodeType":"302","messageId":"303","endLine":6,"endColumn":35},{"ruleId":"300","severity":1,"message":"307","line":16,"column":7,"nodeType":"302","messageId":"303","endLine":16,"endColumn":11},{"ruleId":"300","severity":1,"message":"308","line":66,"column":7,"nodeType":"302","messageId":"303","endLine":66,"endColumn":19},{"ruleId":"300","severity":1,"message":"309","line":73,"column":7,"nodeType":"302","messageId":"303","endLine":73,"endColumn":15},{"ruleId":"300","severity":1,"message":"310","line":96,"column":13,"nodeType":"302","messageId":"303","endLine":96,"endColumn":15},{"ruleId":"311","severity":1,"message":"312","line":168,"column":29,"nodeType":"313","endLine":168,"endColumn":40},{"ruleId":"300","severity":1,"message":"304","line":1,"column":17,"nodeType":"302","messageId":"303","endLine":1,"endColumn":26},{"ruleId":"300","severity":1,"message":"314","line":4,"column":10,"nodeType":"302","messageId":"303","endLine":4,"endColumn":18},{"ruleId":"300","severity":1,"message":"315","line":4,"column":20,"nodeType":"302","messageId":"303","endLine":4,"endColumn":23},{"ruleId":"300","severity":1,"message":"316","line":4,"column":25,"nodeType":"302","messageId":"303","endLine":4,"endColumn":36},{"ruleId":"300","severity":1,"message":"317","line":6,"column":10,"nodeType":"302","messageId":"303","endLine":6,"endColumn":24},{"ruleId":"300","severity":1,"message":"318","line":6,"column":26,"nodeType":"302","messageId":"303","endLine":6,"endColumn":31},{"ruleId":"300","severity":1,"message":"307","line":22,"column":7,"nodeType":"302","messageId":"303","endLine":22,"endColumn":11},{"ruleId":"300","severity":1,"message":"319","line":45,"column":7,"nodeType":"302","messageId":"303","endLine":45,"endColumn":13},{"ruleId":"300","severity":1,"message":"307","line":17,"column":7,"nodeType":"302","messageId":"303","endLine":17,"endColumn":11},{"ruleId":"300","severity":1,"message":"310","line":76,"column":13,"nodeType":"302","messageId":"303","endLine":76,"endColumn":15},{"ruleId":"311","severity":1,"message":"312","line":143,"column":29,"nodeType":"313","endLine":143,"endColumn":40},{"ruleId":"300","severity":1,"message":"304","line":1,"column":17,"nodeType":"302","messageId":"303","endLine":1,"endColumn":26},{"ruleId":"300","severity":1,"message":"316","line":5,"column":10,"nodeType":"302","messageId":"303","endLine":5,"endColumn":21},{"ruleId":"300","severity":1,"message":"307","line":16,"column":7,"nodeType":"302","messageId":"303","endLine":16,"endColumn":11},{"ruleId":"300","severity":1,"message":"322","line":31,"column":7,"nodeType":"302","messageId":"303","endLine":31,"endColumn":16},{"ruleId":"300","severity":1,"message":"323","line":39,"column":7,"nodeType":"302","messageId":"303","endLine":39,"endColumn":13},{"ruleId":"300","severity":1,"message":"319","line":41,"column":7,"nodeType":"302","messageId":"303","endLine":41,"endColumn":13},{"ruleId":"300","severity":1,"message":"320","line":60,"column":7,"nodeType":"302","messageId":"303","endLine":60,"endColumn":16},{"ruleId":"300","severity":1,"message":"324","line":66,"column":7,"nodeType":"302","messageId":"303","endLine":66,"endColumn":14},{"ruleId":"300","severity":1,"message":"325","line":73,"column":25,"nodeType":"302","messageId":"303","endLine":73,"endColumn":33},{"ruleId":"300","severity":1,"message":"314","line":4,"column":10,"nodeType":"302","messageId":"303","endLine":4,"endColumn":18},{"ruleId":"300","severity":1,"message":"315","line":4,"column":20,"nodeType":"302","messageId":"303","endLine":4,"endColumn":23},{"ruleId":"300","severity":1,"message":"316","line":4,"column":25,"nodeType":"302","messageId":"303","endLine":4,"endColumn":36},{"ruleId":"300","severity":1,"message":"317","line":6,"column":10,"nodeType":"302","messageId":"303","endLine":6,"endColumn":24},{"ruleId":"300","severity":1,"message":"318","line":6,"column":26,"nodeType":"302","messageId":"303","endLine":6,"endColumn":31},{"ruleId":"300","severity":1,"message":"307","line":22,"column":7,"nodeType":"302","messageId":"303","endLine":22,"endColumn":11},{"ruleId":"300","severity":1,"message":"319","line":45,"column":7,"nodeType":"302","messageId":"303","endLine":45,"endColumn":13},{"ruleId":"300","severity":1,"message":"317","line":5,"column":10,"nodeType":"302","messageId":"303","endLine":5,"endColumn":24},{"ruleId":"300","severity":1,"message":"307","line":16,"column":7,"nodeType":"302","messageId":"303","endLine":16,"endColumn":11},{"ruleId":"300","severity":1,"message":"320","line":60,"column":7,"nodeType":"302","messageId":"303","endLine":60,"endColumn":16},{"ruleId":"300","severity":1,"message":"321","line":99,"column":46,"nodeType":"302","messageId":"303","endLine":99,"endColumn":50},{"ruleId":"300","severity":1,"message":"304","line":1,"column":17,"nodeType":"302","messageId":"303","endLine":1,"endColumn":26},{"ruleId":"300","severity":1,"message":"307","line":14,"column":7,"nodeType":"302","messageId":"303","endLine":14,"endColumn":11},{"ruleId":"300","severity":1,"message":"320","line":58,"column":7,"nodeType":"302","messageId":"303","endLine":58,"endColumn":16},{"ruleId":"300","severity":1,"message":"304","line":1,"column":17,"nodeType":"302","messageId":"303","endLine":1,"endColumn":26},{"ruleId":"300","severity":1,"message":"316","line":4,"column":10,"nodeType":"302","messageId":"303","endLine":4,"endColumn":21},{"ruleId":"300","severity":1,"message":"307","line":14,"column":7,"nodeType":"302","messageId":"303","endLine":14,"endColumn":11},{"ruleId":"300","severity":1,"message":"322","line":29,"column":7,"nodeType":"302","messageId":"303","endLine":29,"endColumn":16},{"ruleId":"300","severity":1,"message":"323","line":37,"column":7,"nodeType":"302","messageId":"303","endLine":37,"endColumn":13},{"ruleId":"300","severity":1,"message":"319","line":39,"column":7,"nodeType":"302","messageId":"303","endLine":39,"endColumn":13},{"ruleId":"300","severity":1,"message":"320","line":58,"column":7,"nodeType":"302","messageId":"303","endLine":58,"endColumn":16},{"ruleId":"300","severity":1,"message":"324","line":64,"column":7,"nodeType":"302","messageId":"303","endLine":64,"endColumn":14},{"ruleId":"300","severity":1,"message":"325","line":73,"column":22,"nodeType":"302","messageId":"303","endLine":73,"endColumn":30},{"ruleId":"326","severity":1,"message":"327","line":102,"column":5,"nodeType":"328","messageId":"329","endLine":102,"endColumn":19,"fix":"335"},{"ruleId":"300","severity":1,"message":"314","line":4,"column":28,"nodeType":"302","messageId":"303","endLine":4,"endColumn":36},{"ruleId":"300","severity":1,"message":"307","line":13,"column":7,"nodeType":"302","messageId":"303","endLine":13,"endColumn":11},{"ruleId":"300","severity":1,"message":"320","line":57,"column":7,"nodeType":"302","messageId":"303","endLine":57,"endColumn":16},{"ruleId":"300","severity":1,"message":"321","line":95,"column":40,"nodeType":"302","messageId":"303","endLine":95,"endColumn":44},{"ruleId":"300","severity":1,"message":"304","line":1,"column":17,"nodeType":"302","messageId":"303","endLine":1,"endColumn":26},{"ruleId":"300","severity":1,"message":"307","line":13,"column":7,"nodeType":"302","messageId":"303","endLine":13,"endColumn":11},{"ruleId":"300","severity":1,"message":"320","line":57,"column":7,"nodeType":"302","messageId":"303","endLine":57,"endColumn":16},{"ruleId":"331","replacedBy":"336"},{"ruleId":"333","replacedBy":"337"},{"ruleId":"300","severity":1,"message":"307","line":17,"column":7,"nodeType":"302","messageId":"303","endLine":17,"endColumn":11},{"ruleId":"300","severity":1,"message":"310","line":76,"column":13,"nodeType":"302","messageId":"303","endLine":76,"endColumn":15},{"ruleId":"311","severity":1,"message":"312","line":142,"column":29,"nodeType":"313","endLine":142,"endColumn":40},{"ruleId":"300","severity":1,"message":"304","line":1,"column":17,"nodeType":"302","messageId":"303","endLine":1,"endColumn":26},{"ruleId":"300","severity":1,"message":"316","line":5,"column":10,"nodeType":"302","messageId":"303","endLine":5,"endColumn":21},{"ruleId":"300","severity":1,"message":"307","line":16,"column":7,"nodeType":"302","messageId":"303","endLine":16,"endColumn":11},{"ruleId":"300","severity":1,"message":"322","line":31,"column":7,"nodeType":"302","messageId":"303","endLine":31,"endColumn":16},{"ruleId":"300","severity":1,"message":"323","line":39,"column":7,"nodeType":"302","messageId":"303","endLine":39,"endColumn":13},{"ruleId":"300","severity":1,"message":"319","line":41,"column":7,"nodeType":"302","messageId":"303","endLine":41,"endColumn":13},{"ruleId":"300","severity":1,"message":"320","line":60,"column":7,"nodeType":"302","messageId":"303","endLine":60,"endColumn":16},{"ruleId":"300","severity":1,"message":"324","line":66,"column":7,"nodeType":"302","messageId":"303","endLine":66,"endColumn":14},{"ruleId":"300","severity":1,"message":"325","line":73,"column":25,"nodeType":"302","messageId":"303","endLine":73,"endColumn":33},{"ruleId":"300","severity":1,"message":"317","line":5,"column":10,"nodeType":"302","messageId":"303","endLine":5,"endColumn":24},{"ruleId":"300","severity":1,"message":"307","line":16,"column":7,"nodeType":"302","messageId":"303","endLine":16,"endColumn":11},{"ruleId":"300","severity":1,"message":"338","line":23,"column":7,"nodeType":"302","messageId":"303","endLine":23,"endColumn":12},{"ruleId":"300","severity":1,"message":"322","line":31,"column":7,"nodeType":"302","messageId":"303","endLine":31,"endColumn":16},{"ruleId":"300","severity":1,"message":"323","line":39,"column":7,"nodeType":"302","messageId":"303","endLine":39,"endColumn":13},{"ruleId":"300","severity":1,"message":"319","line":41,"column":7,"nodeType":"302","messageId":"303","endLine":41,"endColumn":13},{"ruleId":"300","severity":1,"message":"320","line":60,"column":7,"nodeType":"302","messageId":"303","endLine":60,"endColumn":16},{"ruleId":"300","severity":1,"message":"324","line":66,"column":7,"nodeType":"302","messageId":"303","endLine":66,"endColumn":14},{"ruleId":"300","severity":1,"message":"321","line":96,"column":44,"nodeType":"302","messageId":"303","endLine":96,"endColumn":48},{"ruleId":"300","severity":1,"message":"339","line":100,"column":11,"nodeType":"302","messageId":"303","endLine":100,"endColumn":23},{"ruleId":"300","severity":1,"message":"340","line":106,"column":11,"nodeType":"302","messageId":"303","endLine":106,"endColumn":23},{"ruleId":"300","severity":1,"message":"304","line":1,"column":17,"nodeType":"302","messageId":"303","endLine":1,"endColumn":26},{"ruleId":"300","severity":1,"message":"307","line":14,"column":7,"nodeType":"302","messageId":"303","endLine":14,"endColumn":11},{"ruleId":"300","severity":1,"message":"322","line":29,"column":7,"nodeType":"302","messageId":"303","endLine":29,"endColumn":16},{"ruleId":"300","severity":1,"message":"323","line":37,"column":7,"nodeType":"302","messageId":"303","endLine":37,"endColumn":13},{"ruleId":"300","severity":1,"message":"320","line":58,"column":7,"nodeType":"302","messageId":"303","endLine":58,"endColumn":16},"no-unused-vars","'from' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","'useHistory' is defined but never used.","'faSearch' is defined but never used.","'Logo' is assigned a value but never used.","'Actionbutton' is assigned a value but never used.","'IdButton' is assigned a value but never used.","'id' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useQuery' is defined but never used.","'gql' is defined but never used.","'useMutation' is defined but never used.","'ToastContainer' is defined but never used.","'toast' is defined but never used.","'Button' is assigned a value but never used.","'TableData' is assigned a value but never used.","'data' is assigned a value but never used.","'SelectBox' is assigned a value but never used.","'Option' is assigned a value but never used.","'LinkTag' is assigned a value but never used.","'setState' is assigned a value but never used.","no-whitespace-before-property","Unexpected whitespace before property code.","MemberExpression","unexpectedWhitespace",{"range":"341","text":"342"},"no-native-reassign",["343"],"no-negated-in-lhs",["344"],{"range":"345","text":"342"},["343"],["344"],"'Input' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.",[2037,2039],".","no-global-assign","no-unsafe-negation",[2037,2039]]